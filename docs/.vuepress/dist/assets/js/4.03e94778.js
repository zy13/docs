(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{167:function(t,e,r){t.exports=r.p+"assets/img/storage.5f1d2bf7.png"},169:function(t,e,r){t.exports=r.p+"assets/img/tcp-3.fda53a4e.png"},170:function(t,e,r){t.exports=r.p+"assets/img/https.2a1a6be8.png"},171:function(t,e,r){t.exports=r.p+"assets/img/http.8cfeef1d.png"},190:function(t,e,r){t.exports=r.p+"assets/img/tiktop.43accefe.jpg"},603:function(t,e,r){"use strict";r.r(e);var s=[function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"要点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#要点","aria-hidden":"true"}},[this._v("#")]),this._v(" 要点")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(190),alt:"tiktop"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_1、osi七层协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、osi七层协议","aria-hidden":"true"}},[this._v("#")]),this._v(" 1、OSI七层协议")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_2、http协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、http协议","aria-hidden":"true"}},[this._v("#")]),this._v(" 2、HTTP协议")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"http概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http概述","aria-hidden":"true"}},[this._v("#")]),this._v(" HTTP概述")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(171),alt:"http"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"http常用请求头"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http常用请求头","aria-hidden":"true"}},[this._v("#")]),this._v(" http常用请求头")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"http支持的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http支持的方法","aria-hidden":"true"}},[this._v("#")]),this._v(" HTTP支持的方法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"get和post的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get和post的区别","aria-hidden":"true"}},[this._v("#")]),this._v(" GET和POST的区别")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_301和302的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_301和302的区别","aria-hidden":"true"}},[this._v("#")]),this._v(" 301和302的区别")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"状态码304和-200"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#状态码304和-200","aria-hidden":"true"}},[this._v("#")]),this._v(" 状态码304和 200")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"常见的http的头部"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见的http的头部","aria-hidden":"true"}},[this._v("#")]),this._v(" 常见的HTTP的头部")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"cache-control的值有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control的值有哪些","aria-hidden":"true"}},[this._v("#")]),this._v(" cache-control的值有哪些")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_3、http-和-https"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、http-和-https","aria-hidden":"true"}},[this._v("#")]),this._v(" 3、HTTP 和 HTTPS")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"http2-0-的特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http2-0-的特性","aria-hidden":"true"}},[this._v("#")]),this._v(" HTTP2.0 的特性")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1-http-和-https-的基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-http-和-https-的基本概念","aria-hidden":"true"}},[this._v("#")]),this._v(" (1) HTTP 和 HTTPS 的基本概念")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("strong",[this._v("HTTP")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("strong",[this._v("https")])])])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("p",[t._v("是以安全为目标的超文本传输协议，也就是"),r("code",[t._v("HTTP")]),t._v("的安全版本，即"),r("code",[t._v("HTTP")]),t._v("下加入"),r("code",[t._v("SSL")]),t._v("（安全套接字）层。"),r("code",[t._v("HTTPS")]),t._v("的安全基础是"),r("code",[t._v("SSL")]),t._v("，因此"),r("code",[t._v("HTTPS")]),t._v("的加密由"),r("code",[t._v("SSL")]),t._v("完成。"),r("code",[t._v("HTTPS")]),t._v("协议的主要作用是: "),r("strong",[t._v("建立一个信息安全通道，来确保数据的传输，确保网站的真实性。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-http-和-https-的区别？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-http-和-https-的区别？","aria-hidden":"true"}},[this._v("#")]),this._v(" (2) HTTP 和 HTTPS 的区别？")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("p",[r("code",[t._v("HTTP")]),t._v("传输的数据都是未加密的，也就是明文的，网景公司设置了"),r("code",[t._v("SSL")]),t._v("协议来对"),r("code",[t._v("HTTP")]),t._v("协议传输的数据进行加密处理，简单来说"),r("code",[t._v("HTTPS")]),t._v("协议是由"),r("code",[t._v("HTTP")]),t._v("和"),r("code",[t._v("SSL")]),t._v("协议构建的可进行加密传输和身份认证的网络协议，比"),r("code",[t._v("HTTP")]),t._v("协议的安全性更高。主要的区别如下：")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[r("strong",[r("code",[t._v("HTTPS")]),t._v("协议需要到"),r("code",[t._v("CA")]),t._v("申请证书，一般免费证书很少，需要交费。")]),r("ul",[r("li",[t._v("CA（Certificate Authority）证书颁发机构")]),r("li",[t._v("不同年限不同等级费用不一样，几千几万的都有")])])]),r("li",[r("strong",[r("code",[t._v("HTTP")]),t._v("是超文本传输协议，信息是明文传输，"),r("code",[t._v("HTTPS")]),t._v("则是具有安全性的"),r("code",[t._v("SSL")]),t._v("加密传输协议。")]),r("ul",[r("li",[t._v("SSL(Secure Socket Layer)，安全套接字层")]),r("li",[t._v("SSL可以使用非对称加密算法、对称加密算法、HASH算法\n"),r("ul",[r("li",[t._v("非对称加密算法：RSA，DSA/DSS")]),r("li",[t._v("对称加密算法：AES，RC4，3DES")]),r("li",[t._v("HASH算法： MD5，SHA1，SHA256")])])])])]),r("li",[r("strong",[t._v("链接方式不同，端口也不同，"),r("code",[t._v("HTTP")]),t._v("协议的端口为"),r("code",[t._v("80")]),t._v("，"),r("code",[t._v("HTTPS")]),t._v("的端口为"),r("code",[t._v("443")]),t._v("。")])]),r("li",[r("code",[t._v("HTTP")]),t._v("的连接是简单的无状态的；"),r("code",[t._v("HTTPS")]),t._v("协议是由"),r("code",[t._v("SSL+HTTP")]),t._v("协议构建的可进行加密传输、身份认证的网络协议，比"),r("code",[t._v("HTTP")]),t._v("协议安全。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-https-协议的工作原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-https-协议的工作原理","aria-hidden":"true"}},[this._v("#")]),this._v(" (3) HTTPS 协议的工作原理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("HTTPS")]),this._v("在传输数据之前需要客户端（浏览器）与服务端（网站）之间进行一次握手，在握手过程中将确立双方加密传输数据的密码信息。"),e("code",[this._v("SSL")]),this._v("协议一套加密传输的协议，使用了非对称加密，对称加密以及"),e("code",[this._v("HASH")]),this._v("算法。握手过程的具体描述如下：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(170),alt:"imgs"}})])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[r("strong",[t._v("1.客户端（浏览器）将自己支持的一套加密规则发送给服务端（网站）")]),t._v("，开始进行 "),r("code",[t._v("HTTPS")]),t._v(" 请求。")]),r("li",[r("strong",[t._v("2.网站从中选出一组加密算法与"),r("code",[t._v("HASH")]),t._v("算法，并将自己的身份信息以证书的形式发回给浏览器")]),t._v("。证书里面包含了网站地址，加密公钥，以及证书的"),r("code",[t._v("CA")]),t._v("（颁发机构）等信息。")]),r("li",[r("strong",[t._v("3.浏览器获得网站证书")]),t._v("之后要做以下工作：\n"),r("ul",[r("li",[r("strong",[t._v("验证证书的合法性")]),t._v("（颁发证书的机构是否合法，证书中包含的网站地址是否与正在访问的地址一致等），如果证书受信任，则浏览器地址栏前面会显示一个小锁头，否则会给出证书不受信的提示。")]),r("li",[t._v("如果证书受信任，或者是用户接受了不受信的证书，"),r("strong",[t._v("浏览器会生成一串随机数的密码，并用证书中提供的公钥加密")]),t._v("。")]),r("li",[t._v("使用约定好的"),r("code",[t._v("HASH")]),t._v("算法"),r("strong",[t._v("计算握手消息")]),t._v("，并使用生成的随机数"),r("strong",[t._v("对消息进行加密")]),t._v("，最后将之前生成的所有信息发送给网站。")])])]),r("li",[r("strong",[t._v("4.网站接收浏览器发来的数据")]),t._v("之后要做以下的操作：\n"),r("ul",[r("li",[t._v("使用自己的"),r("strong",[t._v("私钥")]),t._v("将信息解密取出"),r("strong",[t._v("密码")]),t._v("，使用密码解密浏览器发来的"),r("strong",[t._v("握手消息")]),t._v("，并验证"),r("code",[t._v("HASH")]),t._v("是否与浏览器发来的一致。")]),r("li",[t._v("使"),r("strong",[t._v("用密码加密一段握手消息")]),t._v("，发送给浏览器。")])])]),r("li",[r("strong",[t._v("5.浏览器解密并计算握手消息的"),r("code",[t._v("HASH")])]),t._v("，如果与服务端发来的"),r("code",[t._v("HASH")]),t._v("一致，此时握手过程结束，之后所有的通信数据将由之前浏览器生成的随机密码并利用对称加密算法进行加密。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_4-https协议的优点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-https协议的优点","aria-hidden":"true"}},[this._v("#")]),this._v(" (4) https协议的优点")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("使用HTTPS协议可认证用户和服务器，确保数据发送到正确的客户机和服务器；")]),e("li",[this._v("HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，要比http协议安全，可防止数据在传输过程中不被窃取、改变，确保数据的完整性。")]),e("li",[this._v("HTTPS是现行架构下最安全的解决方案，虽然不是绝对安全，但它大幅增加黑客攻击的难度。")]),e("li",[this._v("谷歌曾在2014年8月份调整搜索引擎算法，并称“比起同等HTTP网站，采用HTTPS加密的网站在搜索结果中的排名将会更高”")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_5-https协议的缺点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-https协议的缺点","aria-hidden":"true"}},[this._v("#")]),this._v(" (5) https协议的缺点")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("https握手阶段比较费时，会使页面加载时间延长50%，增加10%~20%的耗电。")]),e("li",[this._v("https缓存不如http高效，会增加数据开销。")]),e("li",[this._v("SSL证书也需要钱，功能越强大的证书费用越高。")]),e("li",[this._v("SSL证书需要绑定IP，不能在同一个ip上绑定多个域名，ipv4资源支持不了这种消耗。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_3、tcp三次握手，四次挥手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、tcp三次握手，四次挥手","aria-hidden":"true"}},[this._v("#")]),this._v(" 3、TCP三次握手，四次挥手")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"为什么需要“三次握手”"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要“三次握手”","aria-hidden":"true"}},[this._v("#")]),this._v(" 为什么需要“三次握手”")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("p",[r("code",[t._v("client")]),t._v("发出的第一个连接请求报文段并没有丢失，而是在某个网络结点长时间的滞留了，以致延误到连接释放以后的某个时间才到达"),r("code",[t._v("server")]),t._v("。本来这是一个早已失效的报文段。但"),r("code",[t._v("server")]),t._v("收到此失效的连接请求报文段后，就误认为是"),r("code",[t._v("client")]),t._v("再次发出的一个新的连接请求。于是就向"),r("code",[t._v("client")]),t._v("发出确认报文段，同意建立连接。假设不采用“三次握手”，那么只要"),r("code",[t._v("server")]),t._v("发出确认，新的连接就建立了。(谢希仁版《计算机网络》)")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("p",[t._v("由于现在"),r("code",[t._v("client")]),t._v("并没有发出建立连接的请求，因此不会理睬"),r("code",[t._v("server")]),t._v("的确认，也不会向"),r("code",[t._v("server")]),t._v("发送数据。但"),r("code",[t._v("server")]),t._v("却以为新的运输连接已经建立，并一直等待"),r("code",[t._v("client")]),t._v("发来数据。这样，"),r("code",[t._v("server")]),t._v("的很多资源就白白浪费掉了。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"三次握手的目的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三次握手的目的","aria-hidden":"true"}},[this._v("#")]),this._v(" 三次握手的目的")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[t._v("实现可靠的数据传输")]),r("li",[t._v("防止"),r("strong",[t._v("已失效的连接请求报文段")]),t._v("突然又传送到了服务端，因而产生错误。")]),r("li",[t._v("解决"),r("strong",[t._v("网络中存在延迟的重复分组")]),t._v("的问题。")]),r("li",[t._v("防止"),r("code",[t._v("server")]),t._v("端一直等待，浪费资源。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"tcp-建立连接协议（三次握手）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp-建立连接协议（三次握手）","aria-hidden":"true"}},[this._v("#")]),this._v(" TCP - 建立连接协议（三次握手）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(169),alt:"img"}})])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[t._v("（1）第一次握手，客户端发送一个连接标识码"),r("code",[t._v("SYN=1")]),t._v("，随机序号"),r("code",[t._v("Seq=X")]),t._v("的数据包给服务端。服务端由"),r("code",[t._v("SYN=1")]),t._v("得知，客户端要求建立连接。\n"),r("ul",[r("li",[r("code",[t._v("SYN = 1（建立连接）, Seq = x （随机序号1~7）")])])])]),r("li",[t._v("（2）第二次握手，服务端收到请求后，要确认连接信息，向客户端发送确认码为"),r("code",[t._v("ACK = X + 1")]),t._v("（客户端的序号Seq+1），连接标识码、随机序号"),r("code",[t._v("Seq = Y")]),t._v("的数据包。\n"),r("ul",[r("li",[r("code",[t._v("SYN = 1, ACK = X + 1, Seq = Y")])]),r("li",[t._v("它表示对刚才客户端SYN报文的回应；")]),r("li",[t._v("同时又标志SYN给客户端，询问客户端是否准备好进行数据通讯。")])])]),r("li",[t._v("（3）第三次握手，客户端检验随机码、连接标识码、确认码，通过后，再次向服务端发送的确认码"),r("code",[t._v("ACK=Y+1")]),t._v("、随机序号"),r("code",[t._v("Seq = Z")]),t._v("的数据包。 服务端收到数据包后进行确认，则连接建立成功。\n"),r("ul",[r("li",[r("code",[t._v("ACK = Y + 1, Seq = Z")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说明","aria-hidden":"true"}},[this._v("#")]),this._v(" 说明")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Seq：表示客户端，数据包的数据部分的第一位应该在数据流中所占的位置。下一个实际有数据的传输，会从上一次发送的ACK数据包的Seq开始。")]),e("li",[this._v("ACK：表示期望的接收方的下一次Seq是多少")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token comment"}},[this._v("# syn - sync 同步")]),this._v("\n"),e("span",{attrs:{class:"token comment"}},[this._v("# Seq - sequence 序列号")]),this._v("\n"),e("span",{attrs:{class:"token comment"}},[this._v("# ACK - acknowledge 应答；确认帧")]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_4、tcp-和-udp-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、tcp-和-udp-的区别","aria-hidden":"true"}},[this._v("#")]),this._v(" 4、TCP 和 UDP 的区别")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("（1）TCP是面向连接的，UDP是无连接的，即发送数据前不需要先建立链接。")]),e("li",[this._v("（2）TCP提供可靠的服务。也就是说，通过TCP连接传送的数据，无差错，不丢失，不重复，且按序到达；UDP尽最大努力交付，即不保证可靠交付。 并且因为TCP可靠，面向连接，不会丢失数据因此适合大数据量的交换。")]),e("li",[this._v("（3）TCP是面向字节流，UDP面向报文，并且网络出现拥塞不会使得发送速率降低（因此会出现丢包，对实时的应用比如IP电话和视频会议等）。")]),e("li",[this._v("（4）TCP只能是1对1的，UDP支持1对1,1对多。")]),e("li",[this._v("（5）TCP的首部较大为20字节，而UDP只有8字节。")]),e("li",[this._v("（6）TCP是面向连接的可靠性传输，而UDP是不可靠的。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"http1-0和http2-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http1-0和http2-0","aria-hidden":"true"}},[this._v("#")]),this._v(" http1.0和http2.0")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_5、传输安全问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、传输安全问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 5、传输安全问题")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_6、数据请求方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6、数据请求方式","aria-hidden":"true"}},[this._v("#")]),this._v(" 6、数据请求方式")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_7、跨域"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7、跨域","aria-hidden":"true"}},[this._v("#")]),this._v(" 7、跨域")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_8、http缓存策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8、http缓存策略","aria-hidden":"true"}},[this._v("#")]),this._v(" 8、http缓存策略")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"浏览器缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存","aria-hidden":"true"}},[this._v("#")]),this._v(" 浏览器缓存")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(167),alt:"storage"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"强缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强缓存","aria-hidden":"true"}},[this._v("#")]),this._v(" 强缓存")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"协商缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存","aria-hidden":"true"}},[this._v("#")]),this._v(" 协商缓存")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_301和302的区别-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_301和302的区别-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 301和302的区别")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"状态码304和200"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#状态码304和200","aria-hidden":"true"}},[this._v("#")]),this._v(" 状态码304和200")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"前端优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端优化","aria-hidden":"true"}},[this._v("#")]),this._v(" 前端优化")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[r("strong",[t._v("降低请求量")]),t._v("：合并资源，减少HTTP 请求数，minify / gzip 压缩，webP，lazyLoad。")]),r("li",[r("strong",[t._v("加快请求速度")]),t._v("：预解析DNS，减少域名数，并行加载，CDN 分发。")]),r("li",[r("strong",[t._v("缓存")]),t._v("：HTTP 协议缓存请求，离线缓存 manifest，离线数据缓存localStorage。")]),r("li",[r("strong",[t._v("渲染")]),t._v("：JS/CSS优化，加载顺序，服务端渲染，pipeline，重绘和回流，防抖和节流。")])])}],a=r(1),i=Object(a.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[r("p",[r("a",{attrs:{href:"https://www.nowcoder.com/tutorial/96/4700c6f1f3334c9191a38406002efa65",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端宝典"),r("OutboundLink")],1)]),t._m(0),t._m(1),r("ul",[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/circle/discuss/AjQ19D/",target:"_blank",rel:"noopener noreferrer"}},[t._v("字节-前端一"),r("OutboundLink")],1)]),r("li",[r("a",{attrs:{href:"https://www.nowcoder.com/discuss/634244?source_id=discuss_experience_nctrack&channel=-1",target:"_blank",rel:"noopener noreferrer"}},[t._v("字节-前端二"),r("OutboundLink")],1)]),r("li",[r("a",{attrs:{href:"https://www.nowcoder.com/interview/ai/cover?companyTagId=665",target:"_blank",rel:"noopener noreferrer"}},[t._v("模拟面试"),r("OutboundLink")],1)]),r("li",[r("a",{attrs:{href:"https://www.zhihu.com/question/339135205",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何准备"),r("OutboundLink")],1)]),r("li",[t._v("项目总结")]),r("li",[r("a",{attrs:{href:"https://www.nowcoder.com/company/home/code/665",target:"_blank",rel:"noopener noreferrer"}},[t._v("字节-算法"),r("OutboundLink")],1)]),r("li",[r("a",{attrs:{href:"https://www.nowcoder.com/discuss/tag/665?order=4&type=2&expTag=0&query=",target:"_blank",rel:"noopener noreferrer"}},[t._v("字节-面经"),r("OutboundLink")],1)])]),t._m(2),t._m(3),r("p",[r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP"),r("OutboundLink")],1),t._v("超文本传输​​协议，是一个用于传输超媒体文档（例如 HTML）的应用层协议。它是为 Web 浏览器与 Web 服务器之间的通信而设计的，但也可以用于其他目的。HTTP 遵循经典的客户端-服务端模型，客户端打开一个连接以发出请求，然后等待直到收到服务器端响应。HTTP 是无状态协议，这意味着服务器不会在两个请求之间保留任何数据（状态）。尽管通常基于 TCP/IP 层，但它可以在任何可靠的传输层上使用，也就是说，该协议不会像 UDP 那样静默的丢失消息。RUDP——作为 UDP 的可靠化升级版本——是一种合适的替代选择。")]),t._m(4),r("p",[t._v("HTTP是一种能够获取如 HTML 这样的网络资源的 protocol(通讯协议)。它是在 Web 上进行数据交换的基础，是一种 client-server 协议，也就是说，请求通常是由像浏览器这样的接受方发起的。一个完整的Web文档通常是由不同的子文档拼接而成的，像是文本、布局描述、图片、视频、脚本等等。")]),t._m(5),t._m(6),t._m(7),r("p",[t._v("GET, POST, HEAD, OPTIONS, PUT, DELETE, TRACE, CONNECT")]),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15),t._m(16),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP"),r("OutboundLink")],1),t._v("是超文本传输协议，是互联网上应用最为广泛的一种网络协议，是一个客户端和服务器端进行数据请求和应答的标准（"),r("code",[t._v("TCP")]),t._v("），用于从 "),r("code",[t._v("WWW")]),t._v(" 服务器传输超文本到本地浏览器的传输协议，它可以使浏览器更加高效，使网络传输减少。")]),t._m(17),t._m(18),t._m(19),t._m(20),t._m(21),t._m(22),t._m(23),t._m(24),t._m(25),t._m(26),t._m(27),t._m(28),t._m(29),t._m(30),t._m(31),t._m(32),t._m(33),r("p",[t._v("采用“三次握手”的办法可以防止上述现象发生。例如刚才那种情况，client不会向server的确认发出确认。server由于收不到确认，就知道client并没有要求建立连接。")]),t._m(34),t._m(35),t._m(36),r("p",[t._v("TCP是传输控制协议，用于建立通信连接，是客户端和服务端之间进行通信的桥梁。")]),r("p",[t._v("TCP协议的通信双方，都必须维护一个序列号，以标识发送出去的数据包中，哪些是已经被对方收到的。")]),r("p",[t._v("三次握手的过程即是通信双方相互告知序列号起始值，并确认对方已经收到了序列号起始值的必经步骤。")]),t._m(37),t._m(38),t._m(39),t._m(40),t._m(41),t._m(42),t._m(43),t._m(44),t._m(45),t._m(46),r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/skynet/archive/2010/05/18/1738301.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据请求方式"),r("OutboundLink")],1)]),t._m(47),t._m(48),t._m(49),r("p",[t._v("缓存分为两种：强缓存和协商缓存，根据服务端的响应头内容来决定。")]),t._m(50),t._m(51),r("p",[t._v("强缓存相关字段有expires，cache-control。如果cache-control与expires同时存在的话，cache-control的优先级高于expires。")]),t._m(52),r("p",[t._v("协商缓存相关字段有Last-Modified/If-Modified-Since，Etag/If-None-Match")]),t._m(53),r("p",[t._v("301 Moved Permanently 被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个URI之一。如果可能，拥有链接编辑功能的客户端应当自动把请求的地址修改为从服务器反馈回来的地址。除非额外指定，否则这个响应也是可缓存的。\n302 Found 请求的资源现在临时从不同的URI响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。")]),r("p",[t._v("字面上的区别就是301是永久重定向，而302是临时重定向。")]),r("p",[t._v("301比较常用的场景是使用域名跳转。302用来做临时跳转 比如未登陆的用户访问用户中心重定向到登录页面。")]),t._m(54),t._m(55),t._m(56)])},s,!1,null,null,null);e.default=i.exports}}]);