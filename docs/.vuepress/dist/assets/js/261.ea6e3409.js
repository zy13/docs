(window.webpackJsonp=window.webpackJsonp||[]).push([[261],{574:function(t,s,n){"use strict";n.r(s);var a=n(1),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("ul",[n("li",[n("router-link",{attrs:{to:"/javascript-wd/1-ES5/5-string.html"}},[t._v("字符串类型-string字符串")])],1),n("li",[n("router-link",{attrs:{to:"/javascript-wd/4-standard/7-string.html"}},[t._v("标准库-String对象")])],1)]),t._m(0),t._m(1),t._m(2),t._m(3),t._m(4),t._m(5),t._m(6),t._m(7),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15),n("p",[t._v("这两种表示方法，在视觉和语义上都等价，但是 JavaScript 不能识别。JavaScript 将合成字符视为两个字符，导致两种表示方法不相等")]),t._m(16),t._m(17),t._m(18),t._m(19),t._m(20),t._m(21),t._m(22),t._m(23),t._m(24),t._m(25),t._m(26),t._m(27),t._m(28),t._m(29),t._m(30),t._m(31),t._m(32),t._m(33),t._m(34),t._m(35),t._m(36),t._m(37),t._m(38),t._m(39),t._m(40),n("p",[n("code",[t._v("matchAll()")]),t._v("方法返回一个正则表达式在当前字符串的所有匹配，详见"),n("router-link",{attrs:{to:"/ECMAScript6/6.html#_15-string-prototype-matchall-es2020"}},[t._v("《正则的扩展》")]),t._v("的一章。")],1),t._m(41),t._m(42),t._m(43),t._m(44),t._m(45),t._m(46),t._m(47),t._m(48),t._m(49),t._m(50)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_1-string-raw"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-string-raw","aria-hidden":"true"}},[this._v("#")]),this._v(" 1. String.raw()")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("ES6 为原生的 String 对象，提供了一个"),s("code",[this._v("raw()")]),this._v("方法。该方法"),s("strong",[this._v("返回一个斜杠都被转义（即斜杠前面再加一个斜杠）的字符串")]),this._v("，往往"),s("strong",[this._v("用于模板字符串的处理方法")]),this._v("。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("String.raw()")]),t._v("方法可以作为处理模板字符串的基本方法，它会将所有变量替换，而且对斜杠进行转义，方便下一步作为字符串来使用。")]),n("li",[n("code",[t._v("String.raw()")]),t._v("本质上是一个正常的函数，只是专用于模板字符串的标签函数。")]),n("li",[t._v("如果写成正常函数的形式，它的第一个参数，应该是一个具有"),n("code",[t._v("raw")]),t._v("属性的对象，且"),n("code",[t._v("raw")]),t._v("属性的值应该是一个数组，对应模板字符串解析后的值。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v('// 实际返回 "Hi\\\\n5!"，显示的是转义后的结果 "Hi\\n5!"')]),t._v("\nString"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("raw"),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`Hi\\n")]),n("span",{attrs:{class:"token interpolation"}},[n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token operator"}},[t._v("+")]),n("span",{attrs:{class:"token number"}},[t._v("3")]),n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{attrs:{class:"token string"}},[t._v("!`")])]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v('// 实际返回 "Hi\\\\u000A!"，显示的是转义后的结果 "Hi\\u000A!"')]),t._v("\nString"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("raw"),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`Hi\\u000A!`")])]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 如果原字符串的斜杠已经转义，那么String.raw()会进行再次转义。")]),t._v("\nString"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("raw"),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`Hi\\\\n`")])]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// 返回 "Hi\\\\\\\\n"')]),t._v("\nString"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("raw"),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`Hi\\\\n`")])]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Hi\\\\\\\\n"')]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// String.raw()方法的第一个参数是一个对象，它的raw属性等同于原始的模板字符串解析后得到的数组。")]),t._v("\n"),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`foo")]),n("span",{attrs:{class:"token interpolation"}},[n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{attrs:{class:"token string"}},[t._v("bar`")])]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\nString"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("raw")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" raw"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token string"}},[t._v("'foo'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'bar'")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 作为函数，String.raw()的代码实现基本如下。")]),t._v("\nString"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function-variable function"}},[t._v("raw")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strings"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("values"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" output "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("''")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" index"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" index "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" values"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" index"),n("span",{attrs:{class:"token operator"}},[t._v("++")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    output "),n("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" strings"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("raw"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" values"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  output "),n("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" strings"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("raw"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" output"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_2-string-fromcodepoint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-string-fromcodepoint","aria-hidden":"true"}},[this._v("#")]),this._v(" 2. String.fromCodePoint()")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("ES5 提供"),s("code",[this._v("String.fromCharCode()")]),this._v("方法，用于从 Unicode 码点返回对应字符，但是这个方法不能识别码点大于"),s("code",[this._v("0xFFFF")]),this._v("的字符。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("ES6 提供了"),n("code",[t._v("String.fromCodePoint()")]),t._v("方法，可以识别大于"),n("code",[t._v("0xFFFF")]),t._v("的字符，弥补了"),n("code",[t._v("String.fromCharCode()")]),t._v("方法的不足。在作用上，正好与下面的"),n("code",[t._v("codePointAt()")]),t._v("方法相反。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// String.fromCharCode()不能识别大于0xFFFF的码点，所以0x20BB7就发生了溢出")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 最高位2被舍弃了，最后返回码点U+0BB7对应的字符，而不是码点U+20BB7对应的字符。")]),t._v("\nString"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("fromCharCode")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("0x20BB7")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "ஷ"')]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 如果String.fromCodePoint方法有多个参数，则它们会被合并成一个字符串返回")]),t._v("\nString"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("fromCodePoint")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("0x20BB7")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "𠮷"')]),t._v("\nString"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("fromCodePoint")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("0x78")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0x1f680")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0x79")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'x\\uD83D\\uDE80y'")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_3-string-prototype-codepointat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-string-prototype-codepointat","aria-hidden":"true"}},[this._v("#")]),this._v(" 3. String.prototype.codePointAt()")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("JavaScript 内部，字符以 "),s("code",[this._v("UTF-16")]),this._v(" 的格式储存，每个字符固定为2个字节。对于那些需要4个字节储存的字符（Unicode 码点大于"),s("code",[this._v("0xFFFF")]),this._v("的字符），JavaScript 会认为它们是两个字符。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 汉字“𠮷”（注意，这个字不是“吉祥”的“吉”）的码点是0x20BB7")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// UTF-16 编码为0xD842 0xDFB7（十进制为55362 57271），需要4个字节储存")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 对于这种4个字节的字符，JavaScript 不能正确处理，字符串长度会误判为2，")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 而且charAt()方法无法读取整个字符，charCodeAt()方法只能分别返回前两个字节和后两个字节的值。")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"𠮷"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("charAt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// ''")]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("charAt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// ''")]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("charCodeAt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 55362")]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("charCodeAt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 57271")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("ES6 提供了"),s("code",[this._v("codePointAt()")]),this._v("方法，能够正确处理 4 个字节储存的字符，返回一个字符的码点。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("codePointAt()")]),t._v("方法的参数，是字符在字符串中的位置（从 "),n("code",[t._v("0")]),t._v(" 开始）")]),n("li",[n("code",[t._v("codePointAt()")]),t._v("方法会正确返回 32 位的 "),n("code",[t._v("UTF-16")]),t._v(" 字符的码点。对于那些两个字节储存的常规字符，它的返回结果与"),n("code",[t._v("charCodeAt()")]),t._v("方法相同。")]),n("li",[n("code",[t._v("codePointAt()")]),t._v("方法返回的是码点的十进制值，如果想要十六进制的值，可以使用"),n("code",[t._v("toString()")]),t._v("方法转换一下。")]),n("li",[n("code",[t._v("codePointAt()")]),t._v("方法是测试一个字符由两个字节还是由四个字节组成的最简单方法。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// JavaScript 将“𠮷a”视为三个字符，codePointAt 方法在第一个字符上，")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 正确地识别了“𠮷”，返回了它的十进制码点 134071（即十六进制的20BB7）")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 在第二个字符（即“𠮷”的后两个字节）和第三个字符“a”上，")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// codePointAt()方法的结果与charCodeAt()方法相同。")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'𠮷a'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("codePointAt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 134071")]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("codePointAt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 57271")]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("codePointAt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 97")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// codePointAt()方法的参数，仍然是不正确的")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 字符a在字符串s的正确位置序号应该是 1，但是必须向codePointAt()方法传入 2")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'𠮷a'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("codePointAt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("toString")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("16")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "20bb7"')]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("codePointAt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("toString")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("16")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "61"')]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 解决这个问题的一个办法是使用for...of循环，因为它会正确识别 32 位的 UTF-16 字符。")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'𠮷a'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ch "),n("span",{attrs:{class:"token keyword"}},[t._v("of")]),t._v(" s"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("codePointAt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("toString")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("16")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 另一种方法也可以，使用扩展运算符（...）进行展开运算。")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token operator"}},[t._v("...")]),n("span",{attrs:{class:"token string"}},[t._v("'𠮷a'")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// arr.length === 2")]),t._v("\narr"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("forEach")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  ch "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("codePointAt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("toString")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("16")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 测试一个字符由两个字节还是由四个字节")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("is32Bit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" c"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("codePointAt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0xFFFF")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("is32Bit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"𠮷"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("is32Bit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"a"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_4-string-prototype-normalize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-string-prototype-normalize","aria-hidden":"true"}},[this._v("#")]),this._v(" 4. String.prototype.normalize()")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("许多欧洲语言有语调符号和重音符号。为了表示它们，Unicode 提供了两种方法。一种是直接提供带重音符号的字符，比如"),n("code",[t._v("Ǒ（\\u01D1）")]),t._v("。另一种是提供合成符号（combining character），即原字符与重音符号的合成，两个字符合成一个字符，比如"),n("code",[t._v("O（\\u004F）")]),t._v("和"),n("code",[t._v("ˇ（\\u030C）")]),t._v("合成"),n("code",[t._v("Ǒ（\\u004F\\u030C）")]),t._v("。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token string"}},[t._v("'\\u01D1'")]),n("span",{attrs:{class:"token operator"}},[t._v("===")]),n("span",{attrs:{class:"token string"}},[t._v("'\\u004F\\u030C'")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'\\u01D1'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'\\u004F\\u030C'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("ES6 提供字符串实例的"),n("code",[t._v("normalize()")]),t._v("方法，"),n("strong",[t._v("用来将字符的不同表示方法统一为同样的形式，这称为 Unicode 正规化。")]),n("code",[t._v("normalize")]),t._v("方法可以接受一个参数来指定"),n("code",[t._v("normalize")]),t._v("的方式，参数的四个可选值如下。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("NFC")]),t._v("，默认参数，表示“"),n("strong",[t._v("标准等价合成")]),t._v("”（Normalization Form Canonical Composition），返回多个简单字符的合成字符。所谓“标准等价”指的是视觉和语义上的等价。")]),n("li",[n("code",[t._v("NFD")]),t._v("，表示“"),n("strong",[t._v("标准等价分解")]),t._v("”（Normalization Form Canonical Decomposition），即在标准等价的前提下，返回合成字符分解的多个简单字符。")]),n("li",[n("code",[t._v("NFKC")]),t._v("，表示“"),n("strong",[t._v("兼容等价合成")]),t._v("”（Normalization Form Compatibility Composition），返回合成字符。所谓“兼容等价”指的是语义上存在等价，但视觉上不等价，比如“囍”和“喜喜”。（这只是用来举例，normalize方法不能识别中文。）")]),n("li",[n("code",[t._v("NFKD")]),t._v("，表示“"),n("strong",[t._v("兼容等价分解")]),t._v("”（Normalization Form Compatibility Decomposition），即在兼容等价的前提下，返回合成字符分解的多个简单字符。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token string"}},[t._v("'\\u01D1'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("normalize")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'\\u004F\\u030C'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("normalize")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// NFC参数返回字符的合成形式，NFD参数返回字符的分解形式")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'\\u004F\\u030C'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("normalize")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'NFC'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'\\u004F\\u030C'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("normalize")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'NFD'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("不过，"),s("code",[this._v("normalize")]),this._v("方法目前不能识别三个或三个以上字符的合成。这种情况下，还是只能使用正则表达式，通过 Unicode 编号区间判断。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_5-string-prototype-includes-、startswith-、endswith"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-string-prototype-includes-、startswith-、endswith","aria-hidden":"true"}},[this._v("#")]),this._v(" 5. String.prototype.includes()、startsWith()、endsWith()")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("传统上，JavaScript 只有"),s("code",[this._v("indexOf")]),this._v("方法，可以用来确定一个字符串是否包含在另一个字符串中。ES6 又提供了三种新方法。这三个方法都支持第二个参数，表示开始搜索的位置。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("includes()")]),this._v("：返回布尔值，表示是否找到了参数字符串。")]),s("li",[s("code",[this._v("startsWith()")]),this._v("：返回布尔值，表示参数字符串是否在原字符串的头部。")]),s("li",[s("code",[this._v("endsWith()")]),this._v("：返回布尔值，表示参数字符串是否在原字符串的尾部。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'Hello world!'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("startsWith")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'Hello'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("endsWith")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'!'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("includes")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'o'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 使用第二个参数n时，endsWith的行为与其他两个方法有所不同")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 它针对前n个字符，而其他两个方法针对从第n个位置直到字符串结束。")]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("startsWith")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'world'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("6")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("endsWith")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'Hello'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("5")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("includes")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'Hello'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("6")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_6-string-prototype-repeat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-string-prototype-repeat","aria-hidden":"true"}},[this._v("#")]),this._v(" 6. String.prototype.repeat()")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("repeat")]),this._v("方法"),s("strong",[this._v("返回一个新字符串，表示将原字符串重复n次")]),this._v("。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("参数如果是小数，会被取整。")]),n("li",[t._v("如果"),n("code",[t._v("repeat")]),t._v("的参数是负数或者"),n("code",[t._v("Infinity")]),t._v("，会报错。")]),n("li",[t._v("如果参数是 "),n("code",[t._v("0")]),t._v(" 到"),n("code",[t._v("-1")]),t._v(" 之间的小数，则等同于 "),n("code",[t._v("0")]),t._v("，这是因为会先进行取整运算。"),n("code",[t._v("0")]),t._v(" 到"),n("code",[t._v("-1")]),t._v(" 之间的小数，取整以后等于"),n("code",[t._v("-0")]),t._v("，"),n("code",[t._v("repeat")]),t._v("视同为 "),n("code",[t._v("0")]),t._v("。")]),n("li",[t._v("如果"),n("code",[t._v("repeat")]),t._v("的参数是字符串，则会先转换成数字。")]),n("li",[t._v("参数"),n("code",[t._v("NaN")]),t._v("等同于 "),n("code",[t._v("0")]),t._v("。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token string"}},[t._v("'x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("repeat")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("3")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "xxx"')]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'hello'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("repeat")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "hellohello"')]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'na'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("repeat")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n\n"),n("span",{attrs:{class:"token string"}},[t._v("'na'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("repeat")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("2.9")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "nana"')]),t._v("\n\n"),n("span",{attrs:{class:"token string"}},[t._v("'na'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("repeat")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("Infinity")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// RangeError")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'na'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("repeat")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("-")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// RangeError")]),t._v("\n\n"),n("span",{attrs:{class:"token string"}},[t._v("'na'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("repeat")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("-")]),n("span",{attrs:{class:"token number"}},[t._v("0.9")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n\n"),n("span",{attrs:{class:"token string"}},[t._v("'na'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("repeat")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("NaN")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n\n"),n("span",{attrs:{class:"token string"}},[t._v("'na'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("repeat")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'na'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'na'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("repeat")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'3'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "nanana"')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_7-string-prototype-padstart-、padend-es2017"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-string-prototype-padstart-、padend-es2017","aria-hidden":"true"}},[this._v("#")]),this._v(" 7. String.prototype.padStart()、padEnd() - ES2017")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("ES2017 引入了字符串补全长度的功能。如果某个字符串不够指定长度，会在头部或尾部补全。"),n("code",[t._v("padStart()")]),t._v("用于"),n("strong",[t._v("头部补全")]),t._v("，"),n("code",[t._v("padEnd()")]),t._v("用于"),n("strong",[t._v("尾部补全")]),t._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("如果原字符串的长度，等于或大于最大长度，则字符串补全不生效，返回原字符串。")]),s("li",[this._v("如果用来补全的字符串与原字符串，两者的长度之和超过了最大长度，则会截去超出位数的补全字符串。")]),s("li",[this._v("如果省略第二个参数，默认使用空格补全长度。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 一共接受两个参数，")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 第一个参数是字符串补全生效的最大长度，")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 第二个参数是用来补全的字符串。")]),t._v("\n\n"),n("span",{attrs:{class:"token string"}},[t._v("'x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("padStart")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("5")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'ab'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 'ababx'")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("padStart")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("4")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'ab'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 'abax'")]),t._v("\n\n"),n("span",{attrs:{class:"token string"}},[t._v("'x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("padEnd")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("5")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'ab'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 'xabab'")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("padEnd")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("4")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'ab'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 'xaba'")]),t._v("\n\n"),n("span",{attrs:{class:"token string"}},[t._v("'xxx'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("padStart")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'ab'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 'xxx'")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'xxx'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("padEnd")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'ab'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 'xxx'")]),t._v("\n\n"),n("span",{attrs:{class:"token string"}},[t._v("'abc'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("padStart")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'0123456789'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token string"}},[t._v("'x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("padStart")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("4")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// '   x'")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("padEnd")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("4")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 'x   '")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("padStart()")]),this._v("的常见用途是为数值补全指定位数。下面代码生成 "),s("code",[this._v("10")]),this._v(" 位的数值字符串。另一个用途是提示字符串格式。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token string"}},[t._v("'1'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("padStart")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'0'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "0000000001"')]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'12'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("padStart")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'0'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "0000000012"')]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'123456'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("padStart")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'0'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "0000123456"')]),t._v("\n\n"),n("span",{attrs:{class:"token string"}},[t._v("'12'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("padStart")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'YYYY-MM-DD'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "YYYY-MM-12"')]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'09-12'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("padStart")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'YYYY-MM-DD'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "YYYY-09-12"')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_8-string-prototype-trimstart-、trimend-es2019"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-string-prototype-trimstart-、trimend-es2019","aria-hidden":"true"}},[this._v("#")]),this._v(" 8. String.prototype.trimStart()、trimEnd() - ES2019")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("ES2019 对字符串实例新增了"),n("code",[t._v("trimStart()")]),t._v("和"),n("code",[t._v("trimEnd()")]),t._v("这两个方法。它们的行为与"),n("code",[t._v("trim()")]),t._v("一致，"),n("code",[t._v("trimStart()")]),n("strong",[t._v("消除字符串头部的空格")]),t._v("，"),n("code",[t._v("trimEnd()")]),n("strong",[t._v("消除尾部的空格")]),t._v("。它们返回的都是新字符串，不会修改原始字符串。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("除了空格键，这两个方法对字符串头部（或尾部）的 "),s("code",[this._v("tab")]),this._v(" 键、换行符等不可见的空白符号也有效。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("浏览器还部署了额外的两个方法，"),n("code",[t._v("trimLeft()")]),t._v("是"),n("code",[t._v("trimStart()")]),t._v("的别名，"),n("code",[t._v("trimRight()")]),t._v("是"),n("code",[t._v("trimEnd()")]),t._v("的别名。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" s "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'  abc  '")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("trim")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "abc"')]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("trimStart")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "abc  "')]),t._v("\ns"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("trimEnd")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "  abc"')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_9-string-prototype-matchall-es2020"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-string-prototype-matchall-es2020","aria-hidden":"true"}},[this._v("#")]),this._v(" 9. String.prototype.matchAll() - ES2020")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_10-string-prototype-replaceall-es2021"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-string-prototype-replaceall-es2021","aria-hidden":"true"}},[this._v("#")]),this._v(" 10. String.prototype.replaceAll() - ES2021")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("ES5 中，字符串的实例方法"),s("code",[this._v("replace()")]),this._v("只能替换第一个匹配。如果要替换所有的匹配，不得不使用正则表达式的"),s("code",[this._v("g")]),this._v("修饰符。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 将第一个b替换成了下划线")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'aabbcc'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("replace")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'b'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'_'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 'aa_bcc'")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 使用正则表达式替换所有匹配")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'aabbcc'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("replace")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token regex"}},[t._v("/b/g")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'_'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// // 'aa__cc'")]),t._v("\n\n"),n("span",{attrs:{class:"token string"}},[t._v("'aabbcc'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("replaceAll")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'b'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'_'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 'aa__cc'")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("正则表达式毕竟不是那么方便和直观，ES2021 引入了"),s("code",[this._v("replaceAll()")]),this._v("方法，可以一次性替换所有匹配。它的用法与"),s("code",[this._v("replace()")]),this._v("相同，"),s("strong",[this._v("返回一个新字符串，不会改变原字符串")]),this._v("。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("第一个参数"),n("code",[t._v("searchValue")]),t._v("是搜索模式，可以是一个字符串，也可以是一个全局的正则表达式（带有"),n("code",[t._v("g")]),t._v("修饰符）。如果"),n("code",[t._v("searchValue")]),t._v("是一个不带有"),n("code",[t._v("g")]),t._v("修饰符的正则表达式，"),n("code",[t._v("replaceAll()")]),t._v("会报错。这一点跟"),n("code",[t._v("replace()")]),t._v("不同。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 可以带两个参数")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 第一个参数是搜索模式")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 第二个参数是字符串")]),t._v("\nString"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("replaceAll")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("searchValue"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" replacement"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// /b/不带有g修饰符，会导致replaceAll()报错")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'aabbcc'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("replace")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token regex"}},[t._v("/b/")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'_'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "aa_bcc"')]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'aabbcc'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("replaceAll")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token regex"}},[t._v("/b/")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'_'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// TypeError")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("第二个参数"),n("code",[t._v("replacement")]),t._v("是一个字符串，表示替换的文本，其中可以使用一些特殊字符串。\n"),n("ul",[n("li",[n("strong",[t._v("$&")]),t._v("：匹配的字符串。")]),n("li",[n("strong",[t._v("$`")]),t._v("：匹配结果前面的文本。")]),n("li",[n("strong",[t._v("$'")]),t._v("：匹配结果后面的文本。")]),n("li",[n("strong",[t._v("$n")]),t._v("：匹配成功的第"),n("code",[t._v("n")]),t._v("组内容，"),n("code",[t._v("n")]),t._v("是从"),n("code",[t._v("1")]),t._v("开始的自然数。这个参数生效的前提是，第一个参数必须是正则表达式。")]),n("li",[n("strong",[t._v("$$")]),t._v("：指代美元符号"),n("code",[t._v("$")]),t._v("。")])])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// $& 表示匹配的字符串，即`b`本身")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 所以返回结果与原字符串一致")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'abbc'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("replaceAll")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'b'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'$&'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 'abbc'")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// $` 表示匹配结果之前的字符串")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 对于第一个`b`，$` 指代`a`")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 对于第二个`b`，$` 指代`ab`")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'abbc'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("replaceAll")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'b'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'$`'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 'aaabc'")]),t._v("\n\n"),n("span",{attrs:{class:"token operator"}},[t._v("/")]),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" $' 表示匹配结果之后的字符串\n"),n("span",{attrs:{class:"token operator"}},[t._v("/")]),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" 对于第一个"),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`b`")])]),t._v("，$' 指代`bc"),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`\n// 对于第二个`")])]),t._v("b"),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`，$' 指代`")])]),t._v("c"),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`\n'abbc'.replaceAll('b', `")])]),t._v("$"),n("span",{attrs:{class:"token string"}},[t._v("'`) // '")]),t._v("abccc'\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// $1 表示正则表达式的第一个组匹配，指代`ab`")]),t._v("\n"),n("span",{attrs:{class:"token operator"}},[t._v("/")]),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" $"),n("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" 表示正则表达式的第二个组匹配，指代"),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`bc`")])]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'abbc'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("replaceAll")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token regex"}},[t._v("/(ab)(bc)/g")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'$2$1'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 'bcab'")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// $$ 指代 $")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'abc'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("replaceAll")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'b'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'$$'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "a$c"')]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("第二个参数"),n("code",[t._v("replacement")]),t._v("除了为字符串，也可以是一个函数，该函数的返回值将替换掉第一个参数"),n("code",[t._v("searchValue")]),t._v("匹配的文本。这个替换函数可以接受多个参数。\n"),n("ul",[n("li",[t._v("第一个参数是捕捉到的匹配内容")]),n("li",[t._v("第二个参数捕捉到是组匹配（有多少个组匹配，就有多少个对应的参数）")]),n("li",[t._v("此外，最后还可以添加两个参数，倒数第二个参数是捕捉到的内容在整个字符串中的位置，最后一个参数是原字符串。")])])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 函数的返回值会替换掉所有b的匹配")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'aabbcc'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("replaceAll")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'b'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'_'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 'aa__cc'")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 正则表达式有三个组匹配")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// replacer第一个参数match是捕捉到的匹配内容（即字符串123abc456）")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 后面三个参数p1、p2、p3则依次为三个组匹配")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'123abc456'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token regex"}},[t._v("/(\\d+)([a-z]+)(\\d+)/g")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("replacer")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("match"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p1"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p2"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p3"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" offset"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p1"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p2"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p3"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("join")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("' - '")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nstr"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("replaceAll")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" replacer"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 123 - abc - 456")]),t._v("\n")])])])}],!1,null,null,null);s.default=e.exports}}]);