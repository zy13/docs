(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{431:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("p",[a("a",{attrs:{href:"https://www.wangdoc.com/javascript/events/keyboard.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("键盘事件"),a("OutboundLink")],1)]),t._m(0),t._m(1),t._m(2),t._m(3),t._m(4),t._m(5),t._m(6),t._m(7),t._m(8),t._m(9),a("p",[a("code",[t._v("KeyboardEvent.code")]),t._v("属性返回一个字符串，表示当前按下的键的字符串形式。该属性只读。下面是一些常用键的字符串形式，其他键请查"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),a("OutboundLink")],1)]),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15),t._m(16),t._m(17),t._m(18),t._m(19),t._m(20),t._m(21)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_1、键盘事件的种类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、键盘事件的种类","aria-hidden":"true"}},[this._v("#")]),this._v(" 1、键盘事件的种类")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("键盘事件由用户击打键盘触发，主要有"),a("code",[t._v("keydown")]),t._v("、"),a("code",[t._v("keypress")]),t._v("、"),a("code",[t._v("keyup")]),t._v("三个事件，它们都继承了"),a("code",[t._v("KeyboardEvent")]),t._v("接口。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`keydown`")])]),t._v("：按下键盘时触发。\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`keypress`")])]),t._v("：按下有值的键时触发，即按下 Ctrl、Alt、Shift、Meta 这样无值的键，这个事件不会触发。\n            对于有值的键，按下时先触发keydown事件，再触发这个事件。\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`keyup`")])]),t._v("：松开键盘时触发该事件。\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 如果用户一直按键不松开，就会连续触发键盘事件，触发的顺序如下。")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("1.")]),t._v("keydown\n"),a("span",{attrs:{class:"token number"}},[t._v("2.")]),t._v("keypress\n"),a("span",{attrs:{class:"token number"}},[t._v("3.")]),t._v("keydown\n"),a("span",{attrs:{class:"token number"}},[t._v("4.")]),t._v("keypress\n"),a("span",{attrs:{class:"token number"}},[t._v("5.")]),a("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("（重复以上过程）\n"),a("span",{attrs:{class:"token number"}},[t._v("6.")]),t._v("keyup\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_2、keyboardevent-接口概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、keyboardevent-接口概述","aria-hidden":"true"}},[this._v("#")]),this._v(" 2、KeyboardEvent 接口概述")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("KeyboardEvent")]),this._v("接口用来描述用户与键盘的互动。这个接口继承了"),s("code",[this._v("Event")]),this._v("接口，并且定义了自己的实例属性和实例方法。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("浏览器原生提供"),s("code",[this._v("KeyboardEvent")]),this._v("构造函数，用来新建键盘事件的实例。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 接受两个参数")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 第一个参数是字符串，表示事件类型")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 第二个参数是一个事件配置对象，该参数可选")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("KeyboardEvent")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 除了Event接口提供的属性，还可以配置以下字段，它们都是可选。")]),t._v("\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`key`")])]),t._v("：字符串，当前按下的键，默认为空字符串。\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`code`")])]),t._v("：字符串，表示当前按下的键的字符串形式，默认为空字符串。\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`location`")])]),t._v("：整数，当前按下的键的位置，默认为"),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("。\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`ctrlKey`")])]),t._v("：布尔值，是否按下 Ctrl 键，默认为"),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("。\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`shiftKey`")])]),t._v("：布尔值，是否按下 Shift 键，默认为"),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("。\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`altKey`")])]),t._v("：布尔值，是否按下 Alt 键，默认为"),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("。\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`metaKey`")])]),t._v("：布尔值，是否按下 Meta 键，默认为"),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("。\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`repeat`")])]),t._v("：布尔值，是否重复按键，默认为"),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("。\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_3、keyboardevent-altkey，ctrlkey，metakey，shiftkey-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、keyboardevent-altkey，ctrlkey，metakey，shiftkey-属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 3、KeyboardEvent.altKey，ctrlKey，metaKey，shiftKey 属性")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 以下属性都是只读属性，返回一个布尔值，表示是否按下对应的键。")]),t._v("\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`KeyboardEvent.altKey`")])]),t._v("：是否按下 Alt 键\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`KeyboardEvent.ctrlKey`")])]),t._v("：是否按下 Ctrl 键\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`KeyboardEvent.metaKey`")])]),t._v("：是否按下 meta 键（Mac系统是一个四瓣的小花，Windows 系统是windows键）\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`KeyboardEvent.shiftKey`")])]),t._v("：是否按下 Shift 键\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("showChar")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'ALT: '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" e"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("altKey"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'CTRL: '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" e"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ctrlKey"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Meta: '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" e"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("metaKey"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Shift: '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" e"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shiftKey"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ndocument"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'keydown'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" showChar"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_4、keyboardevent-code-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、keyboardevent-code-属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 4、KeyboardEvent.code 属性")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("数字键 "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("9")]),t._v("：返回 digit0 "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" digit9\n字母键 "),a("span",{attrs:{class:"token constant"}},[t._v("A")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" z：返回 KeyA "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" KeyZ\n功能键 "),a("span",{attrs:{class:"token constant"}},[t._v("F1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("F12")]),t._v("：返回 "),a("span",{attrs:{class:"token constant"}},[t._v("F1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("F12")]),t._v("\n方向键：返回 ArrowDown、ArrowUp、ArrowLeft、ArrowRight\nAlt 键：返回 AltLeft 或 AltRight\nShift 键：返回 ShiftLeft 或 ShiftRight\nCtrl 键：返回 ControlLeft 或 ControlRight\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_5、keyboardevent-key-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、keyboardevent-key-属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 5、KeyboardEvent.key 属性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("KeyboardEvent.key")]),this._v("属性返回一个字符串，表示按下的键名。该属性只读。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("如果按下的键代表可打印字符，则返回这个字符，比如数字、字母。")]),a("li",[t._v("如果按下的键代表不可打印的特殊字符，则返回预定义的键值，比如 "),a("code",[t._v("Backspace，Tab，Enter，Shift，Control，Alt，CapsLock，Esc，Spacebar，PageUp，PageDown，End，Home，Left，Right，Up，Down，PrintScreen，Insert，Del，Win，F1～F12，NumLock，Scroll")]),t._v(" 等。")]),a("li",[t._v("如果同时按下一个控制键和一个符号键，则返回符号键的键名。比如，按下 "),a("code",[t._v("Ctrl + a")]),t._v("，则返回"),a("code",[t._v("a")]),t._v("；按下 "),a("code",[t._v("Shift + a")]),t._v("，则返回大写的"),a("code",[t._v("A")]),t._v("。")]),a("li",[t._v("如果无法识别键名，返回字符串"),a("code",[t._v("Unidentified")]),t._v("。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_6、keyboardevent-location-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、keyboardevent-location-属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 6、KeyboardEvent.location 属性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("KeyboardEvent.location")]),this._v("属性返回一个整数，表示按下的键处在键盘的哪一个区域。它可能取以下值。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("：处在键盘的主区域，或者无法判断处于哪一个区域。\n"),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("：处在键盘的左侧，只适用那些有两个位置的键（比如 Ctrl 和 Shift 键）。\n"),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("：处在键盘的右侧，只适用那些有两个位置的键（比如 Ctrl 和 Shift 键）。\n"),a("span",{attrs:{class:"token number"}},[t._v("3")]),t._v("：处在数字小键盘。\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_7、keyboardevent-repeat-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、keyboardevent-repeat-属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 7、KeyboardEvent.repeat 属性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("KeyboardEvent.repeat")]),this._v("返回一个布尔值，代表该键是否被按着不放，以便判断是否重复这个键，即浏览器会持续触发"),s("code",[this._v("keydown")]),this._v("和"),s("code",[this._v("keypress")]),this._v("事件，直到用户松开手为止。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_8、keyboardevent-getmodifierstate-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、keyboardevent-getmodifierstate-方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 8、KeyboardEvent.getModifierState() 方法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("KeyboardEvent.getModifierState()")]),this._v("方法返回一个布尔值，表示是否按下或激活指定的功能键。它的常用参数如下。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`Alt`")])]),t._v("：Alt 键\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`CapsLock`")])]),t._v("：大写锁定键\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`Control`")])]),t._v("：Ctrl 键\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`Meta`")])]),t._v("：Meta 键\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`NumLock`")])]),t._v("：数字键盘开关键\n"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`Shift`")])]),t._v("：Shift 键\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 只要Control、Alt、Meta里面，同时按下任意两个或两个以上的键就返回。")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  event"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getModifierState")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Control'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v("\n  event"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getModifierState")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Alt'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v("\n  event"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getModifierState")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Meta'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])}],!1,null,null,null);s.default=e.exports}}]);