(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{605:function(e,t,v){"use strict";v.r(t);var _=v(1),a=Object(_.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("div",{staticClass:"content"},[v("h2",{attrs:{id:"☆-vue中computed和watch的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#☆-vue中computed和watch的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" ☆ - Vue中computed和watch的区别")]),v("ul",[v("li",[v("p",[v("code",[e._v("computed")]),e._v(" 是计算属性，依赖其他属性计算值，并且 "),v("code",[e._v("computed")]),e._v(" 的值有缓存，只有当计算\n值变化才会返回内容。")])]),v("li",[v("p",[e._v("一对多：一个属性依赖多个属性")])]),v("li",[v("p",[e._v("必须要有一个返回值")])]),v("li",[v("p",[e._v("依赖属性为发生变化，调用缓存的值，否则重新计算")])]),v("li",[v("p",[e._v("只有函数形式")])]),v("li",[v("p",[v("code",[e._v("watch")]),e._v(" 监听data中属性，属性值发生变化时，就会执行回调，在回调中可以进行一些逻辑操作。")]),v("ul",[v("li",[e._v("多对一：多个属性依赖一个属性")]),v("li",[e._v("监听的属性需要在data中初始化")]),v("li",[e._v("根据使用场景，来使用可以设置一些属性，")]),v("li",[e._v("函数形式对象形式，对象形式可以设置immediate喝deep属性，分别表示是否立即执行与深层监听")])])])]),v("h2",{attrs:{id:"☆-vue中-route和-router的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#☆-vue中-route和-router的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" ☆ - Vue中$route和$router的区别")]),v("ul",[v("li",[v("p",[v("code",[e._v("$route")]),e._v(" 是当前组件映射的“路由信息对象”，包括 "),v("code",[e._v("path")]),e._v("，"),v("code",[e._v("params")]),e._v("，"),v("code",[e._v("hash")]),e._v("，"),v("code",[e._v("query")]),e._v("，"),v("code",[e._v("fullPath")]),e._v("，"),v("code",[e._v("matched")]),e._v("，"),v("code",[e._v("name")]),e._v(" 等路由信息参数。")])]),v("li",[v("p",[v("code",[e._v("$router")]),e._v("是整个应用的“路由实例”对象，包括了路由的跳转方法，钩子函数等。")])])]),v("h2",{attrs:{id:"v-model的原理是什么？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#v-model的原理是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" V-model的原理是什么？")]),v("p",[e._v("Vue的"),v("strong",[e._v("双向数据绑定")]),e._v("是由"),v("strong",[e._v("数据劫持")]),e._v("结合"),v("strong",[e._v("发布者订阅者")]),e._v("实现的。")]),v("ul",[v("li",[e._v("数据劫持是通过"),v("strong",[e._v("Object.defineProperty()"),v("strong",[e._v("来劫持对象数据的")]),e._v("setter")]),e._v("和"),v("strong",[e._v("getter")]),e._v("操作。 在数据变动时作你想做的事")])]),v("h3",{attrs:{id:"原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原理","aria-hidden":"true"}},[e._v("#")]),e._v(" 原理")]),v("ul",[v("li",[e._v("通过"),v("code",[e._v("Observer")]),e._v("来监听自己的"),v("code",[e._v("model")]),e._v("数据变化，通过"),v("code",[e._v("Compile")]),e._v("来解析编译模板指令，最终利用"),v("code",[e._v("Watcher")]),e._v("搭起"),v("code",[e._v("Observer")]),e._v("和"),v("code",[e._v("Compile")]),e._v("之间的通信桥梁，达到数据变化->视图更新")]),v("li",[e._v("在初始化"),v("code",[e._v("vue")]),e._v("实例时，遍历"),v("code",[e._v("data")]),e._v("这个对象，给每一个键值对利用"),v("code",[e._v("Object.definedProperty")]),e._v("对"),v("code",[e._v("data")]),e._v("的键值对新增"),v("code",[e._v("get")]),e._v("和\n"),v("code",[e._v("set")]),e._v("方法，利用了事件监听"),v("code",[e._v("DOM")]),e._v("的机制，让视图去改变数据")])]),v("h2",{attrs:{id:"vuex的流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vuex的流程","aria-hidden":"true"}},[e._v("#")]),e._v(" vuex的流程")]),v("ul",[v("li",[e._v("页面通过"),v("code",[e._v("mapAction")]),e._v("异步提交事件到"),v("code",[e._v("action")]),e._v("。")]),v("li",[v("code",[e._v("action")]),e._v("通过"),v("code",[e._v("commit")]),e._v("把对应参数同步提交到"),v("code",[e._v("mutation")]),e._v("。")]),v("li",[v("code",[e._v("mutation")]),e._v("会修改"),v("code",[e._v("state")]),e._v("中对于的值。")]),v("li",[e._v("最后通过"),v("code",[e._v("getter")]),e._v("把对应值跑出去，在页面的计算属性中通过"),v("code",[e._v("mapGetter")]),e._v("来动态获取"),v("code",[e._v("state")]),e._v("中的值")])]),v("h2",{attrs:{id:"route-和-router-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#route-和-router-的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" $route 和$router 的区别")]),v("ul",[v("li",[v("code",[e._v("$route")]),e._v("是“路由信息对象”，包括"),v("code",[e._v("path，params，hash，query，fullPath，matched，name")]),e._v("等路\n由信息参数。")]),v("li",[v("code",[e._v("$router")]),e._v("是“路由实例”对象包括了路由的跳转方法，钩子函数等")])]),v("h2",{attrs:{id:"react和vue的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#react和vue的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" react和vue的区别")]),v("p",[e._v("=> "),v("strong",[e._v("相同点")]),e._v("：")]),v("ul",[v("li",[e._v("1.数据驱动页面，提供响应式的试图组件")]),v("li",[e._v("2.都有virtual DOM,组件化的开发，通过props参数进行父子之间组件传递数据，都实现了webComponents规范")]),v("li",[e._v("3.数据流动单向，都支持服务器的渲染SSR")]),v("li",[e._v("4.都有支持native的方法，react有React native， vue有wexx")])]),v("p",[e._v("=> "),v("strong",[e._v("不同点")]),e._v("：")]),v("ul",[v("li",[e._v("1.数据绑定：Vue实现了双向的数据绑定，react数据流动是单向的")]),v("li",[e._v("2.数据渲染：大规模的数据渲染，react更快")]),v("li",[e._v("3.使用场景：React配合Redux架构适合大规模多人协作复杂项目，Vue适合小快的项目")]),v("li",[e._v("4.开发风格：react推荐做法jsx + inline style")])])])}],!1,null,null,null);t.default=a.exports}}]);