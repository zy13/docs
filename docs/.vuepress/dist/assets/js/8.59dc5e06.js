(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{332:function(a,t,e){"use strict";e.r(t);var s=e(0),l=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[e("h3",{attrs:{id:"javascript的执行上下文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript的执行上下文","aria-hidden":"true"}},[a._v("#")]),a._v(" JavaScript的执行上下文")]),e("blockquote",[e("p",[a._v("上下文可以被当作作用域理解")])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("js代码的执行环境分以下几种情况：\n全局代码-脚本首次执行的默认环境\n函数代码-每当调用一个函数，进入一个函数内部\neval代码-eval内部的文本被执行时\n")])])]),e("ul",[e("li",[a._v("全局上下文or全局作用域")])]),e("blockquote",[e("p",[a._v("全局上下文的变量可以被其他任何上下文访问")])]),e("ul",[e("li",[a._v("函数上下文or函数作用域or局部作用域")])]),e("blockquote",[e("p",[a._v("每次调用函数都会创建一个新的函数上下文，会创建一个私有的作用域，函数内部的变量只能内部访问，外部访问不到，而函数内部可以访问函数外部的变量。")])]),e("ul",[e("li",[a._v("执行上下文堆栈")])]),e("blockquote",[e("p",[a._v("执行上下文堆栈，亦即（Call Stack）调用栈or执行栈")])]),e("ul",[e("li",[a._v("上下文环境")])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("\n")])])])])}],!1,null,null,null);t.default=l.exports}}]);