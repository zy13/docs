(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{463:function(t,s,n){"use strict";n.r(s);var a=n(1),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("p",[n("a",{attrs:{href:"https://www.wangdoc.com/javascript/dom/text.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Text 节点和 DocumentFragment 节点"),n("OutboundLink")],1)]),t._m(0),t._m(1),t._m(2),t._m(3),t._m(4),t._m(5),t._m(6),t._m(7),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15),t._m(16),t._m(17),t._m(18),t._m(19),t._m(20),t._m(21),t._m(22),t._m(23),t._m(24),t._m(25),t._m(26),t._m(27),t._m(28),t._m(29),t._m(30),t._m(31),t._m(32),t._m(33),t._m(34),t._m(35),t._m(36),t._m(37),t._m(38),t._m(39),t._m(40)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_1、text-节点的概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、text-节点的概念","aria-hidden":"true"}},[this._v("#")]),this._v(" 1、Text 节点的概念")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("文本节点（"),s("code",[this._v("Text")]),this._v("）代表元素节点（"),s("code",[this._v("Element")]),this._v("）和属性节点（"),s("code",[this._v("Attribute")]),this._v("）的文本内容。如果一个节点只包含一段文本，那么它就有一个文本子节点，代表该节点的文本内容。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("通常我们使用父节点的"),n("code",[t._v("firstChild")]),t._v("、"),n("code",[t._v("nextSibling")]),t._v("等属性获取文本节点，或者使用"),n("code",[t._v("Document")]),t._v("节点的"),n("code",[t._v("createTextNode")]),t._v("方法创造一个文本节点。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 获取文本节点")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" textNode "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'p'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 创造文本节点")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" textNode "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("createTextNode")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'Hi'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'div'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("textNode"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("浏览器原生提供一个"),s("code",[this._v("Text")]),this._v("构造函数。它返回一个文本节点实例。它的参数就是该文本节点的文本内容。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("由于空格也是一个字符，所以哪怕只有一个空格，也会形成文本节点。比如，"),n("code",[t._v("<p> </p>")]),t._v("包含一个空格，它的子节点就是一个文本节点。")]),n("li",[t._v("文本节点除了继承"),n("code",[t._v("Node")]),t._v("接口，还继承了"),n("code",[t._v("CharacterData")]),t._v("接口。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 空字符串")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" text1 "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Text")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 非空字符串")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" text2 "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Text")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'This is a text node'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_2、text-节点的属性-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、text-节点的属性-data","aria-hidden":"true"}},[this._v("#")]),this._v(" 2、Text 节点的属性 - data")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("data")]),this._v("属性等同于"),s("code",[this._v("nodeValue")]),this._v("属性，用来设置或读取文本节点的内容。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 读取文本内容")]),t._v("\ndocument"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'p'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\ndocument"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'p'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeValue\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 设置文本内容")]),t._v("\ndocument"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'p'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'Hello World'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_3、text-节点的属性-wholetext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、text-节点的属性-wholetext","aria-hidden":"true"}},[this._v("#")]),this._v(" 3、Text 节点的属性 - wholeText")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("wholeText")]),t._v("属性将当前文本节点与毗邻的文本节点，作为一个整体返回。大多数情况下，"),n("code",[t._v("wholeText")]),t._v("属性的返回值，与"),n("code",[t._v("data")]),t._v("属性和"),n("code",[t._v("textContent")]),t._v("属性相同。但是，某些特殊情况会有差异。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("p id"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token string"}},[t._v('"para"')]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),n("span",{attrs:{class:"token constant"}},[t._v("A")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("em"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),n("span",{attrs:{class:"token constant"}},[t._v("B")]),n("span",{attrs:{class:"token operator"}},[t._v("<")]),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("em"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token constant"}},[t._v("C")]),n("span",{attrs:{class:"token operator"}},[t._v("<")]),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 文本节点的wholeText属性和data属性，返回值相同")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" el "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'para'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wholeText "),n("span",{attrs:{class:"token comment"}},[t._v('// "A "')]),t._v("\nel"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),n("span",{attrs:{class:"token comment"}},[t._v('// "A "')]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 一旦移除<em>节点，wholeText属性与data属性就会有差异，")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 因为这时其实<p>节点下面包含了两个毗邻的文本节点。")]),t._v("\nel"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("removeChild")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("para"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wholeText "),n("span",{attrs:{class:"token comment"}},[t._v('// "A C"')]),t._v("\nel"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),n("span",{attrs:{class:"token comment"}},[t._v('// "A "')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_4、text-节点的属性-length"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、text-节点的属性-length","aria-hidden":"true"}},[this._v("#")]),this._v(" 4、Text 节点的属性 - length")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("length")]),this._v("属性返回当前文本节点的文本长度。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Text")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'Hello'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_5、nextelementsibling，previouselementsibling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、nextelementsibling，previouselementsibling","aria-hidden":"true"}},[this._v("#")]),this._v(" 5、nextElementSibling，previousElementSibling")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("nextElementSibling")]),this._v("属性返回紧跟在当前文本节点后面的那个同级元素节点。如果取不到元素节点，则返回"),s("code",[this._v("null")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("previousElementSibling")]),this._v("属性返回当前文本节点前面最近的同级元素节点。如果取不到元素节点，则返回"),s("code",[this._v("null")]),this._v("。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// HTML 为")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// <div>Hello <em>World</em></div>")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tn "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'div'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntn"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextElementSibling\n"),n("span",{attrs:{class:"token comment"}},[t._v("// <em>World</em>")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_6、text-节点的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、text-节点的方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 6、Text 节点的方法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("以下"),s("code",[this._v("5")]),this._v("个方法都是编辑"),s("code",[this._v("Text")]),this._v("节点文本内容的方法。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("appendData()")]),t._v("：在"),n("code",[t._v("Text")]),t._v("节点尾部追加字符串。")]),n("li",[n("code",[t._v("deleteData()")]),t._v("：删除"),n("code",[t._v("Text")]),t._v("节点内部的子字符串，第一个参数为子字符串开始位置，第二个参数为子字符串长度。")]),n("li",[n("code",[t._v("insertData()")]),t._v("：在"),n("code",[t._v("Text")]),t._v("节点插入字符串，第一个参数为插入位置，第二个参数为插入的子字符串。")]),n("li",[n("code",[t._v("replaceData()")]),t._v("：用于替换文本，第一个参数为替换开始位置，第二个参数为需要被替换掉的长度，第三个参数为新加入的字符串。")]),n("li",[n("code",[t._v("subStringData()")]),t._v("：用于获取子字符串，第一个参数为子字符串在"),n("code",[t._v("Text")]),t._v("节点中的开始位置，第二个参数为子字符串长度。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// HTML 代码为")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// <p>Hello World</p>")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pElementText "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'p'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\npElementText"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("appendData")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'!'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 页面显示 Hello World!")]),t._v("\npElementText"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("deleteData")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("7")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("5")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 页面显示 Hello W")]),t._v("\npElementText"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("insertData")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("7")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'Hello '")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 页面显示 Hello WHello")]),t._v("\npElementText"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("replaceData")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("7")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("5")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'World'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 页面显示 Hello WWorld")]),t._v("\npElementText"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("substringData")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("7")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v('// 页面显示不变，返回"World "')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_7、text-节点的方法-remove"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、text-节点的方法-remove","aria-hidden":"true"}},[this._v("#")]),this._v(" 7、Text 节点的方法 - remove()")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("remove")]),this._v("方法用于移除当前"),s("code",[this._v("Text")]),this._v("节点。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// HTML 代码为")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// <p>Hello World</p>")]),t._v("\ndocument"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'p'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("remove")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 现在 HTML 代码为")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// <p></p>")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_8、text-节点的方法-splittext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、text-节点的方法-splittext","aria-hidden":"true"}},[this._v("#")]),this._v(" 8、Text 节点的方法 - splitText()")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("splitText")]),t._v("方法将"),n("code",[t._v("Text")]),t._v("节点一分为二，变成两个毗邻的"),n("code",[t._v("Text")]),t._v("节点。它的"),n("strong",[t._v("参数就是分割位置（从零开始），分割到该位置的字符前结束")]),t._v("。如果分割位置不存在，将报错。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("分割后，该方法返回分割位置后方的字符串，而原"),s("code",[this._v("Text")]),this._v("节点变成只包含分割位置前方的字符串。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v('// html 代码为 <p id="p">foobar</p>')]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'p'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" textnode "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newText "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" textnode"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("splitText")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("3")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnewText "),n("span",{attrs:{class:"token comment"}},[t._v('// "bar"')]),t._v("\ntextnode "),n("span",{attrs:{class:"token comment"}},[t._v('// "foo"')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("父元素节点的"),s("code",[this._v("normalize")]),this._v("方法可以将毗邻的两个"),s("code",[this._v("Text")]),this._v("节点合并。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 接上面的例子，文本节点的splitText方法将一个Text节点分割成两个，")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 父元素的normalize方法可以实现逆操作，将它们合并。")]),t._v("\n\np"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 将毗邻的两个 Text 节点合并")]),t._v("\np"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("normalize")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_9、documentfragment-节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9、documentfragment-节点","aria-hidden":"true"}},[this._v("#")]),this._v(" 9、DocumentFragment 节点")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("DocumentFragment")]),t._v("节点代表一个文档的片段，本身就是一个完整的 "),n("code",[t._v("DOM")]),t._v(" 树形结构。它没有父节点，"),n("code",[t._v("parentNode")]),t._v("返回"),n("code",[t._v("null")]),t._v("，但是可以插入任意数量的子节点。它不属于当前文档，操作"),n("code",[t._v("DocumentFragment")]),t._v("节点，要比直接操作 "),n("code",[t._v("DOM")]),t._v(" 树快得多。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("它一般用于构建一个 "),n("code",[t._v("DOM")]),t._v(" 结构，然后插入当前文档。"),n("code",[t._v("document.createDocumentFragment")]),t._v("方法，以及浏览器原生的"),n("code",[t._v("DocumentFragment")]),t._v("构造函数，可以创建一个空的"),n("code",[t._v("DocumentFragment")]),t._v("节点。然后再使用其他 "),n("code",[t._v("DOM")]),t._v(" 方法，向其添加子节点。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 创建了一个DocumentFragment节点，")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 然后将一个li节点添加在它里面，最后将DocumentFragment节点移动到原文档。")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" docFrag "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("createDocumentFragment")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" docFrag "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("DocumentFragment")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" li "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("createElement")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'li'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nli"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'Hello World'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocFrag"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("li"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ndocument"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'ul'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("docFrag"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("注意，"),n("code",[t._v("DocumentFragment")]),t._v("节点本身不能被插入当前文档。当它作为"),n("code",[t._v("appendChild()")]),t._v("、"),n("code",[t._v("insertBefore()")]),t._v("、"),n("code",[t._v("replaceChild()")]),t._v("等方法的参数时，是它的所有子节点插入当前文档，而不是它自身。一旦"),n("code",[t._v("DocumentFragment")]),t._v("节点被添加进当前文档，它自身就变成了空节点（"),n("code",[t._v("textContent")]),t._v("属性为空字符串），可以被再次使用。如果想要保存"),n("code",[t._v("DocumentFragment")]),t._v("节点的内容，可以使用"),n("code",[t._v("cloneNode")]),t._v("方法。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 添加DocumentFragment节点进入当前文档，不会清空DocumentFragment节点。")]),t._v("\ndocument\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("querySelector")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'ul'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("docFrag"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("cloneNode")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 使用DocumentFragment反转一个指定节点的所有子节点的顺序")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("reverse")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("createDocumentFragment")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("while")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastChild"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" f"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastChild"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  n"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("DocumentFragment")]),t._v("节点对象没有自己的属性和方法，全部继承自"),n("code",[t._v("Node")]),t._v("节点和"),n("code",[t._v("ParentNode")]),t._v("接口。也就是说，"),n("code",[t._v("DocumentFragment")]),t._v("节点比"),n("code",[t._v("Node")]),t._v("节点多出以下四个属性。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("children")]),t._v("：返回一个动态的"),n("code",[t._v("HTMLCollection")]),t._v("集合对象，包括当前"),n("code",[t._v("DocumentFragment")]),t._v("对象的所有子元素节点。")]),n("li",[n("code",[t._v("firstElementChild")]),t._v("：返回当前"),n("code",[t._v("DocumentFragment")]),t._v("对象的第一个子元素节点，如果没有则返回"),n("code",[t._v("null")]),t._v("。")]),n("li",[n("code",[t._v("lastElementChild")]),t._v("：返回当前"),n("code",[t._v("DocumentFragment")]),t._v("对象的最后一个子元素节点，如果没有则返回"),n("code",[t._v("null")]),t._v("。")]),n("li",[n("code",[t._v("childElementCount")]),t._v("：返回当前"),n("code",[t._v("DocumentFragment")]),t._v("对象的所有子元素数量。")])])}],!1,null,null,null);s.default=e.exports}}]);