(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{242:function(t,s,n){"use strict";n.r(s);var a=n(0),r=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h3",{attrs:{id:"javascript教程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript教程","aria-hidden":"true"}},[t._v("#")]),n("a",{attrs:{href:"https://wangdoc.com/javascript/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript教程"),n("OutboundLink")],1)]),n("h3",{attrs:{id:"javascript标准教程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript标准教程","aria-hidden":"true"}},[t._v("#")]),n("a",{attrs:{href:"http://javascript.ruanyifeng.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript标准教程"),n("OutboundLink")],1)]),n("h3",{attrs:{id:"中高端大厂面试秘籍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#中高端大厂面试秘籍","aria-hidden":"true"}},[t._v("#")]),n("a",{attrs:{href:"https://juejin.im/post/5c64d15d6fb9a049d37f9c20#heading-66",target:"_blank",rel:"noopener noreferrer"}},[t._v("中高端大厂面试秘籍"),n("OutboundLink")],1)]),t._m(0),t._m(1),t._m(2),t._m(3),t._m(4),t._m(5),t._m(6),n("blockquote",[n("p",[n("a",{attrs:{href:"https://www.zhihu.com/question/30972581",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何证明一个数的数根就是它对9的余数加1"),n("OutboundLink")],1),n("br"),n("a",{attrs:{href:"https://www.zhihu.com/equation?tex=x+%3D+%5Csum_%7Bi%3D0%7D%5E%7Bn-1%7D%7Ba_i%7D%7B10%5Ei%7D",target:"_blank",rel:"noopener noreferrer"}},[t._v("一个n位的10进制数可以写成公式形式"),n("OutboundLink")],1)])]),t._m(7),n("blockquote")])},[function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("js题集")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("strong",[this._v("降序排列整合")]),this._v("："),s("br"),this._v("\n描述：输入一个非负整数n，输出它的降序排列之后的整数。例如输入123456，输出654321"),s("br"),this._v("\n解题思路：将数字转化为字符串，分割，排序，逆序之后重新连接为字符串，再转为数字。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 1、数字转化为字符串：String(number)")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 2、分割，字符串转化为数组： split('')")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 3、排序：sort()")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 4、逆序：reverse()")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 5、数组转化为字符串：join('')")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 6、字符串转化为数字：parseInt()")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("decendReverse")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("!")]),n("span",{attrs:{class:"token function"}},[t._v("isNaN")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" num"),n("span",{attrs:{class:"token operator"}},[t._v(">=")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("parseInt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("split")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('""')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("sort")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("reverse")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("join")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('""')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("strong",[this._v("三角形数")]),this._v("："),s("br"),this._v("\n三角形数：1+2+3+...+n, 其中的每一项的数字都表示当前行的数量，从上到下由1到n正好形成一个三角形"),s("br"),this._v("\n描述：输入一个数字n，返回n的三角形数"),s("br"),this._v("\n解题思路：使用求和公式")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 求和公式为: ((1+n)/2)*n")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("triangularNumber")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("!")]),n("span",{attrs:{class:"token function"}},[t._v("isNaN")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" n"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v("n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v("/")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" n\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[s("strong",[this._v("求数根")]),this._v("\n数根：一个数拆开之后重新求和，如何所得和为个位数，则停止，否则继续拆数子求和。\n描述：给定一个数n，求数n的根数\n解题思路：使用求数根公式，而非循环迭代计算")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("digitRoot")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{attrs:{class:"token operator"}},[t._v("-")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v("%")]),n("span",{attrs:{class:"token number"}},[t._v("9")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("如何实现一个LazyMan")])])}],!1,null,null,null);s.default=r.exports}}]);