(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{227:function(t,n,s){"use strict";s.r(n);var e=s(0),a=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this.$createElement,n=this._self._c||t;return n("div",{staticClass:"content"},[n("h3",{attrs:{id:"分支合并代码更新规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分支合并代码更新规则","aria-hidden":"true"}},[this._v("#")]),this._v(" 分支合并代码更新规则")]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("现有分支A，从A中拉出分支A1进行开发。A1分支开发完毕，现需要合并到A。\n那么A1中新增或者修改的代码，是如何合并到A中同文件代码的呢？\n\n规则：比如x文件，A1修改了m，A修改了n，下面分两种情况：\n1、m、n代码没有冲突。合并的结果是：x文件包含m、n\n2、m、n代码有冲突。合并结果是：m、n解决冲突后的代码\n")])])])])}],!1,null,null,null);n.default=a.exports}}]);