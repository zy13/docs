(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{497:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("p",[a("a",{attrs:{href:"https://www.wangdoc.com/javascript/operators/bit.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("二进制位运算符"),a("OutboundLink")],1)]),t._m(0),t._m(1),t._m(2),t._m(3),t._m(4),t._m(5),t._m(6),t._m(7),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15),t._m(16),t._m(17),t._m(18),t._m(19),t._m(20),t._m(21),t._m(22),t._m(23),t._m(24),t._m(25),t._m(26),t._m(27),t._m(28)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_1、概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、概述","aria-hidden":"true"}},[this._v("#")]),this._v(" 1、概述")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("位运算符只对"),a("strong",[t._v("整数")]),t._v("起作用，如果一个运算子不是整数，会自动转为整数后再执行。")]),a("li",[a("code",[t._v("JavaScript")]),t._v("做位运算的时，以"),a("code",[t._v("32")]),t._v("位带符号的整数进行运算的，并且返回值也是一个"),a("code",[t._v("32")]),t._v("位"),a("strong",[t._v("带符号的整数")]),t._v("。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 二进制位运算符用于直接对二进制位进行计算，一共有7个")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 这些位运算符直接处理每一个比特位（bit），所以是非常底层的运算，好处是速度极快，缺点是很不直观")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 许多场合不能使用它们，否则会使代码难以理解和查错。")]),t._v("\n二进制 "),a("span",{attrs:{class:"token function"}},[t._v("或")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("|")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 运算符（"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`or`")])]),t._v("）：符号为 "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v("，表示若两个二进制位都为"),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("，则结果为"),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("，否则为"),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("。\n二进制 "),a("span",{attrs:{class:"token function"}},[t._v("与")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("&")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 运算符（"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`and`")])]),t._v("）：符号为 "),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("，表示若两个二进制位都为"),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("，则结果为"),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("，否则为"),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("。\n二进制 "),a("span",{attrs:{class:"token function"}},[t._v("否")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 运算符（"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`not`")])]),t._v("）：符号为 "),a("span",{attrs:{class:"token operator"}},[t._v("~")]),t._v("，表示对一个二进制位取反。\n"),a("span",{attrs:{class:"token function"}},[t._v("异或")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("^")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 运算符（"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`xor`")])]),t._v("）：符号为 "),a("span",{attrs:{class:"token operator"}},[t._v("^")]),t._v("，表示若两个二进制位不相同，则结果为"),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("，否则为"),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("。\n"),a("span",{attrs:{class:"token function"}},[t._v("左移")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 运算符（"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`left shift`")])]),t._v("）：符号为 "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v("，详见下文解释。\n"),a("span",{attrs:{class:"token function"}},[t._v("右移")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 运算符（"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`right shift`")])]),t._v("）：符号为 "),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v("，详见下文解释。\n"),a("span",{attrs:{class:"token function"}},[t._v("头部补零的右移")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v(">>>")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 运算符（"),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`zero filled right shift`")])]),t._v("）：符号为 "),a("span",{attrs:{class:"token operator"}},[t._v(">>>")]),t._v("，详见下文解释。\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 将i（不管是整数或小数）转为32位整数")]),t._v("\ni "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 将任意数值转为32位整数。")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 将任意值与0进行一次或运算，这个位运算会自动将一个值转为32位整数")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("toInt32")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// toInt32可以将小数转为整数")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 对于大于或等于2的32次方的整数，大于32位的数位都会被舍去。")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("toInt32")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1.001")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("toInt32")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1.999")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("toInt32")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("toInt32")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("toInt32")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("pow")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("32")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("toInt32")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("pow")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("32")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_2、二进制-或-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、二进制-或-运算符","aria-hidden":"true"}},[this._v("#")]),this._v(" 2、二进制 或( | ) 运算符")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("二进制或运算符（"),a("code",[t._v("|")]),t._v("）"),a("strong",[t._v("逐位比较")]),t._v("两个运算子，两个二进制位之中只要有一个为"),a("code",[t._v("1")]),t._v("，就返回"),a("code",[t._v("1")]),t._v("，否则返回"),a("code",[t._v("0")]),t._v("。")]),a("li",[t._v("位运算"),a("strong",[t._v("只对整数有效")]),t._v("，遇到小数时，会将小数部分舍去，只保留整数部分。")]),a("li",[a("strong",[t._v("位运算取整方法")]),t._v("不适用超过"),a("code",[t._v("32")]),t._v("位整数最大值 2"),a("sup",[t._v("32")]),t._v("("),a("code",[t._v("2147483647")]),t._v(")的数。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 0和3的二进制形式分别是00和11，所以进行二进制或运算会得到11（即3）")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 将一个小数与0进行二进制或运算，等同于对该数去除小数部分，即取整数位。")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 对小数取整数位")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("2.9")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("2.9")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// -2")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 得不到超过2**32的整数")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("2147483649.4")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// -2147483647")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_3、二进制-与-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、二进制-与-运算符","aria-hidden":"true"}},[this._v("#")]),this._v(" 3、二进制 与( & ) 运算符")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("二进制与运算符（"),a("code",[t._v("&")]),t._v("）的规则是"),a("strong",[t._v("逐位比")]),t._v("较两个运算子，两个二进制位之中只要有一个位为"),a("code",[t._v("0")]),t._v("，就返回"),a("code",[t._v("0")]),t._v("，否则返回"),a("code",[t._v("1")]),t._v("。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 0（二进制00）和3（二进制11）进行二进制与运算会得到00（即0）")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_4、二进制-否-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、二进制-否-运算符","aria-hidden":"true"}},[this._v("#")]),this._v(" 4、二进制 否( ~ ) 运算符")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("二进制否运算符（"),a("code",[t._v("~")]),t._v("）将"),a("strong",[t._v("每个二进制位都变为相反值")]),t._v("（"),a("code",[t._v("0")]),t._v("变为"),a("code",[t._v("1")]),t._v("，"),a("code",[t._v("1")]),t._v("变为"),a("code",[t._v("0")]),t._v("）")]),a("li",[t._v("进行二进制否运算，"),a("code",[t._v("JavaScript")]),t._v(" 内部将所有的运算子都转为"),a("code",[t._v("32")]),t._v("位的二进制整数再进行运算。")]),a("li",[t._v("第一位（符号位）是"),a("code",[t._v("1")]),t._v("，所以这个数是一个负数。"),a("code",[t._v("JavaScript")]),t._v("内部采用补码形式表示负数，即需要将这个数减去"),a("code",[t._v("1")]),t._v("，再取一次反，然后加上负号，才能得到这个负数对应的"),a("code",[t._v("10")]),t._v("进制值。")]),a("li",[t._v("一个数与自身的取反值相加，等于"),a("code",[t._v("-1")]),t._v("，即"),a("code",[t._v("x + ~x = -1; ~x = -1 - x")]),t._v("。")]),a("li",[t._v("对一个整数连续两次二进制否运算，得到它自身。")]),a("li",[t._v("对一个小数连续进行两次二进制否运算，能达到取整效果，"),a("strong",[t._v("使用二进制否运算取整，是所有取整方法中最快的一种")]),t._v("。")]),a("li",[a("strong",[t._v("对字符串进行二进制否运算")]),t._v("，"),a("code",[t._v("JavaScript")]),t._v(" 引擎会先调用"),a("code",[t._v("Number")]),t._v("函数，将字符串转为数值。")]),a("li",[t._v("对于其他类型的值，二进制否运算也是先用"),a("code",[t._v("Number")]),t._v("转为数值，然后再进行处理。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 对3进行二进制否运算，得到-4")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 3的32位整数形式是 00000000000000000000000000000011")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 二进制否运算以后得11111111111111111111111111111100")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 这个数减去1等于11111111111111111111111111111011")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 再取一次反得到00000000000000000000000000000100")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 再加上负号就是-4")]),t._v("\n\n"),a("span",{attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// -4")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 相当于 -1-3 = -4")]),t._v("\n\n"),a("span",{attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 相当于 -1+3 = 2")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 一个整数连续两次二进制否运算，得到它自身")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 对一个小数连续进行两次二进制否运算，能达到取整效果。")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token number"}},[t._v("2.9")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token number"}},[t._v("47.11")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 47")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token number"}},[t._v("1.9999")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// Number函数将字符串/其他类型的值转为数值的规则")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 相当于~Number('011')")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token string"}},[t._v("'011'")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// -12")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 相当于~Number('42 cats')")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token string"}},[t._v("'42 cats'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 相当于~Number('0xcafebabe')")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token string"}},[t._v("'0xcafebabe'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 889275713")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 相当于~Number('deadbeef')")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token string"}},[t._v("'deadbeef'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 相当于 ~Number([])")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 相当于 ~Number(NaN)")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 相当于 ~Number(null)")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("~")]),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_5、异或-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、异或-运算符","aria-hidden":"true"}},[this._v("#")]),this._v(" 5、异或(^) 运算符")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("异或运算（"),a("code",[t._v("^")]),t._v("）"),a("strong",[t._v("在两个二进制位不同时返回"),a("code",[t._v("1")]),t._v("，相同时返回"),a("code",[t._v("0")])]),t._v("。")]),a("li",[t._v("“异或运算”有一个特殊运用，"),a("strong",[t._v("连续对两个数a和b进行三次异或运算")]),t._v("，"),a("code",[t._v("a^=b; b^=a; a^=b;")]),t._v("，"),a("strong",[t._v("可以互换它们的值，这是互换两个变量的值的最快方法。")]),t._v("。")]),a("li",[t._v("使用“异或运算”可以在不引入临时变量的前提下，互换两个变量的值。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 0（二进制00）与3（二进制11）进行异或运算，它们每一个二进制位都不同，所以得到11（即3）")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 互换两个变量的值的最快方法")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 在不引入临时变量的前提下，互换两个变量的值")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("99")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),a("span",{attrs:{class:"token operator"}},[t._v("^=")]),t._v(" b"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),a("span",{attrs:{class:"token operator"}},[t._v("^=")]),t._v(" a"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("^=")]),t._v(" b"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),a("span",{attrs:{class:"token comment"}},[t._v("// 99")]),t._v("\nb "),a("span",{attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 异或运算也可以用来取整。")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("12.9")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 12")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_6、左移-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、左移-运算符","aria-hidden":"true"}},[this._v("#")]),this._v(" 6、左移(<<) 运算符")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("左移运算符（"),a("code",[t._v("<<")]),t._v("）表示"),a("strong",[t._v("将一个数的二进制值向左移动指定的位数，尾部补0，即乘以2的指定次方")]),t._v("。向左移动的时候，最高位的符号位是一起移动的。")]),a("li",[t._v("左移运算符基本上相当于乘以"),a("code",[t._v("2")]),t._v("的指定次方。")]),a("li",[t._v("如果左移"),a("code",[t._v("0")]),t._v("位，就相当于将该数值转为"),a("code",[t._v("32")]),t._v("位整数，等同于取整，对于正数和负数都有效。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 4 的二进制形式为100，")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 左移一位为1000（即十进制的8）")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 相当于乘以2的1次方")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 8")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// -4左移一位得到-8，是因为")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// -4的二进制形式是11111111111111111111111111111100，")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 左移一位后得到11111111111111111111111111111000，")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 该数转为十进制（减去1后取反，再加上负号）即为-8。")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// -8")]),t._v("\n\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 左移`0`位，就相当于将该数值转为`32`位整数，等同于取整")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("13.5")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 13")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("13.5")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// -13")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 使用左移运算符，将颜色的 RGB 值转为 HEX 值")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// RGB(红绿蓝) to HEX(hexadecimal，十六进制)")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// (1 << 24)的作用为保证结果是6位数")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" color "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("r"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("186")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("218")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("85")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{attrs:{class:"token function-variable function"}},[t._v("rgb2hex")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'#'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("24")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("16")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("8")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("toString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("16")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 先转成十六进制，然后返回字符串")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("substr")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{attrs:{class:"token comment"}},[t._v("// 去除字符串的最高位，返回后面六个字符串")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("rgb2hex")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("color"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("r"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" color"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("g"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" color"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "#bada55"')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_7、右移-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、右移-运算符","aria-hidden":"true"}},[this._v("#")]),this._v(" 7、右移(>>) 运算符")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("右移运算符（"),a("code",[t._v(">>")]),t._v("）表示将一个数的二进制值向右移动指定的位数。如果是正数，头部全部补"),a("code",[t._v("0")]),t._v("；如果是负数，头部全部补"),a("code",[t._v("1")])]),a("li",[t._v("右移运算符基本上相当于除以"),a("code",[t._v("2")]),t._v("的指定次方（最高位即符号位参与移动）。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 因为4的二进制形式为 00000000000000000000000000000100，")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 右移一位得到 00000000000000000000000000000010，即为十进制的2")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// -4的二进制形式为 11111111111111111111111111111100，")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 右移一位，头部补1，得到 11111111111111111111111111111110, 即为十进制的-2 ")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// -2")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 右移运算可以模拟 2 的整除运算。")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 2 ")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 相当于 5 / 2 = 2")]),t._v("\n\n"),a("span",{attrs:{class:"token number"}},[t._v("21")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 相当于 21 / 4 = 5")]),t._v("\n\n"),a("span",{attrs:{class:"token number"}},[t._v("21")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 相当于 21 / 8 = 2")]),t._v("\n\n"),a("span",{attrs:{class:"token number"}},[t._v("21")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 相当于 21 / 16 = 1")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_8、头部补零的右移-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、头部补零的右移-运算符","aria-hidden":"true"}},[this._v("#")]),this._v(" 8、头部补零的右移(>>>) 运算符")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("头部补零的右移运算符（"),s("code",[this._v(">>>")]),this._v("）与右移运算符（"),s("code",[this._v(">>")]),this._v("）只有一个差别，就是一个数的二进制形式向右移动时，头部一律补零，而不考虑符号位。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("所以，该运算总是得到正值。对于正数，该运算的结果与右移运算符（"),s("code",[this._v(">>")]),this._v("）完全一致，区别主要在于负数。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("strong",[this._v("查看一个负整数在计算机内部的储存形式，最快的方法就是使用这个运算符")]),this._v("。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 将一个值转为32位无符号整数")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// -4的二进制形式为11111111111111111111111111111100，")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 带符号位的右移一位，得到01111111111111111111111111111110，")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 即为十进制的2147483646。")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 2147483646")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// -1作为32位整数时，内部的储存形式使用无符号整数格式解读，值为 4294967295")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 即(2^32)-1，等于11111111111111111111111111111111")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 4294967295")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_9、开关作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9、开关作用","aria-hidden":"true"}},[this._v("#")]),this._v(" 9、开关作用")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("位运算符可以用作"),s("strong",[this._v("设置对象属性的开关")]),this._v("。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 假定某个对象有四个开关，每个开关都是一个变量。")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 那么，可以设置一个四位的二进制数，它的每个位对应一个开关。")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 用二进制与运算，检查当前设置是否打开了指定开关。")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 假设需要打开A、B、D三个开关，我们可以构造一个掩码变量。")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 有了掩码，二进制或运算可以确保打开指定的开关。")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 二进制与运算可以将当前设置中凡是与开关设置不一样的项，全部关闭。")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 异或运算可以切换（toggle）当前设置")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 二进制否运算可以翻转当前设置")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 设置 A、B、C、D 四个开关，每个开关分别占有一个二进制位。")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("FLAG_A")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 0001")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("FLAG_B")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 0010")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("FLAG_C")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 0100")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("FLAG_D")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("8")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 1000")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" flags "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 0101")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 对A、B、D三个变量进行二进制或运算，得到掩码值为二进制的1011")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" mask "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("FLAG_A")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("FLAG_B")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("FLAG_D")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 0001 | 0010 | 1000 => 1011")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 检验是否打开了开关C。如果打开，会返回true，否则返回false。")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flags "),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("FLAG_C")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("// 0101 & 0100 => 0100 => true")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 计算后得到的flags变量，代表三个开关的二进制位都打开了。")]),t._v("\nflags "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" flags "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" mask"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 将当前设置中凡是与开关设置不一样的项，全部关闭。")]),t._v("\nflags "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" flags "),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v(" mask"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 第一次执行可以得到当前设置的相反值，再执行一次又得到原来的值。")]),t._v("\nflags "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" flags "),a("span",{attrs:{class:"token operator"}},[t._v("^")]),t._v(" mask"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 原设置为0，运算后变为1；原设置为1，运算后变为0。")]),t._v("\nflags "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("~")]),t._v("flags"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])}],!1,null,null,null);s.default=e.exports}}]);