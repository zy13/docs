(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{300:function(t,s,n){"use strict";n.r(s);var a=n(1),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("p",[n("a",{attrs:{href:"https://www.wangdoc.com/javascript/features/conversion.html#%E6%A6%82%E8%BF%B0",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据类型的转换"),n("OutboundLink")],1)]),t._m(0),t._m(1),t._m(2),t._m(3),t._m(4),t._m(5),t._m(6),t._m(7),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15),t._m(16),t._m(17),t._m(18),t._m(19),t._m(20),t._m(21),t._m(22),t._m(23),t._m(24),t._m(25),t._m(26),t._m(27),t._m(28),t._m(29),t._m(30),t._m(31),t._m(32),t._m(33),t._m(34),t._m(35),t._m(36),t._m(37),t._m(38),t._m(39)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_1、概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、概述","aria-hidden":"true"}},[this._v("#")]),this._v(" 1、概述")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("JavaScript")]),this._v(" 是一种"),s("strong",[this._v("动态类型语言，变量没有类型限制，可以随时赋予任意值")]),this._v("。如果运算符发现，运算子的类型与预期不符，就会"),s("strong",[this._v("自动转换类型")]),this._v("。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// y为true时，x是一个数值；y为false时，x是一个字符串")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// x的类型没法在编译阶段就知道，必须等到运行时才能知道。")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" y "),n("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'a'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 减法运算符预期左右两侧的运算子应该是数值，如果不是，就会自动将它们转为数值。")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'4'")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"强制转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强制转换","aria-hidden":"true"}},[this._v("#")]),this._v(" 强制转换")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("强制转换主要指使用"),s("code",[this._v("Number()")]),this._v("、"),s("code",[this._v("String()")]),this._v("和"),s("code",[this._v("Boolean()")]),this._v("三个函数，手动将各种类型的值，分别转换成数字、字符串或者布尔值。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_2、强制转换-number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、强制转换-number","aria-hidden":"true"}},[this._v("#")]),this._v(" 2、强制转换 - Number()")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用"),s("code",[this._v("Number")]),this._v("函数，可以"),s("strong",[this._v("将任意类型的值转化成数值")]),this._v("，它要比"),s("code",[this._v("parseInt")]),this._v("函数严格很多。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（1）原始类型值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（1）原始类型值","aria-hidden":"true"}},[this._v("#")]),this._v(" （1）原始类型值")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 原始类型值的转换规则如下")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 数值：转换后还是原来的值")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("324")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 324")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 字符串：如果可以被解析为数值，则转换为相应的数值; 如果不可以被解析为数值，返回 NaN")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'324'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 324")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'324abc'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 空字符串转为0")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("''")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 布尔值：true 转成 1，false 转成 0")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// undefined：转成 NaN")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("undefined"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// null：转成0")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 比`parseInt`函数严格很多。")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// parseInt逐个解析字符，而Number函数整体转换字符串的类型。")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 只要有一个字符无法转成数值，整个字符串就会被转为NaN")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("parseInt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'42 cats'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 42")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'42 cats'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// parseInt和Number函数都会自动过滤一个字符串前导和后缀的空格。")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("parseInt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'\\t\\v\\r12.34\\n'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 12")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'\\t\\v\\r12.34\\n'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 12.34")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（2）对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（2）对象","aria-hidden":"true"}},[this._v("#")]),this._v(" （2）对象")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("Number")]),this._v("方法的参数是对象时，将返回"),s("code",[this._v("NaN")]),this._v("，除非是包含单个数值的数组。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("第一步，调用对象自身的"),n("code",[t._v("valueOf")]),t._v("方法。如果返回原始类型的值，则直接对该值使用"),n("code",[t._v("Number")]),t._v("函数，不再进行后续步骤。")]),n("li",[t._v("第二步，如果"),n("code",[t._v("valueOf")]),t._v("方法返回的还是对象，则改为调用对象自身的"),n("code",[t._v("toString")]),t._v("方法。如果"),n("code",[t._v("toString")]),t._v("方法返回原始类型的值，则对该值使用"),n("code",[t._v("Number")]),t._v("函数，不再进行后续步骤。")]),n("li",[t._v("第三步，如果"),n("code",[t._v("toString")]),t._v("方法返回的是对象，就报错。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// Number背后的转换规则比较复杂")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("5")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 首先调用obj.valueOf方法, 结果返回对象本身")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 继续调用obj.toString方法，这时返回字符串[object Object]")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 对这个字符串使用Number函数，得到NaN。")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("valueOf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'object'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("toString")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("valueOf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 默认情况下，对象的valueOf方法返回对象本身")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 所以一般总是会调用toString方法")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 而toString方法返回对象的类型字符串（比如[object Object]）")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 如果toString方法返回的不是原始类型的值，结果就会报错")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  valueOf"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  toString"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// TypeError: Cannot convert object to primitive value at Number (<anonymous>)")]),t._v("\n\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 返回valueOf方法的值")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  valueOf"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 返回toString方法的值")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  toString"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 表示valueOf方法先于toString方法执行")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Number")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  valueOf"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  toString"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_3、强制转换-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、强制转换-string","aria-hidden":"true"}},[this._v("#")]),this._v(" 3、强制转换 - String()")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("String")]),this._v("函数可以将任意类型的值转化成字符串，转换规则如下。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（1）原始类型值-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（1）原始类型值-2","aria-hidden":"true"}},[this._v("#")]),this._v(" （1）原始类型值")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" 数值：转为相应的字符串。\n"),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" 字符串：转换后还是原来的值。\n"),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" 布尔值："),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("转为字符串"),n("span",{attrs:{class:"token string"}},[t._v('"true"')]),t._v("，"),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("转为字符串"),n("span",{attrs:{class:"token string"}},[t._v('"false"')]),t._v("。\n"),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" undefined：转为字符串"),n("span",{attrs:{class:"token string"}},[t._v('"undefined"')]),t._v("。\n"),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("：转为字符串"),n("span",{attrs:{class:"token string"}},[t._v('"null"')]),t._v("。\n\n"),n("span",{attrs:{class:"token function"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("123")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "123"')]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'abc'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "abc"')]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "true"')]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("undefined"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "null"')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（2）对象-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（2）对象-2","aria-hidden":"true"}},[this._v("#")]),this._v(" （2）对象")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("String")]),t._v("方法的参数如果是对象，返回一个"),n("strong",[t._v("类型字符串")]),t._v("；如果是数组，返回该"),n("strong",[t._v("数组的字符串形式")]),t._v("。"),n("code",[t._v("String")]),t._v("方法背后的转换规则，与"),n("code",[t._v("Number")]),t._v("方法基本相同，只是互换了"),n("code",[t._v("valueOf")]),t._v("方法和"),n("code",[t._v("toString")]),t._v("方法的执行顺序。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("（1）先调用对象自身的"),n("code",[t._v("toString")]),t._v("方法。如果返回原始类型的值，则对该值使用"),n("code",[t._v("String")]),t._v("函数，不再进行以下步骤。")]),n("li",[t._v("（2）如果"),n("code",[t._v("toString")]),t._v("方法返回的是对象，再调用原对象的"),n("code",[t._v("valueOf")]),t._v("方法。如果"),n("code",[t._v("valueOf")]),t._v("方法返回原始类型的值，则对该值使用"),n("code",[t._v("String")]),t._v("函数，不再进行以下步骤。")]),n("li",[t._v("（3）如果"),n("code",[t._v("valueOf")]),t._v("方法返回的是对象，就报错。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token function"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "1,2,3"')]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 先调用对象的toString方法，发现返回的是字符串[object Object]，就不再调用valueOf方法了。")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "[object Object]"')]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("toString")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "[object Object]"')]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 如果toString法和valueOf方法，返回的都是对象，就会报错。")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  valueOf"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  toString"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// TypeError: Cannot convert object to primitive value")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 通过自定义toString方法，改变返回值")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 返回toString方法的值（数值3）")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  toString"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v('// "3"')]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 返回的还是toString方法的值（[object Object]）")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  valueOf"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v('// "[object Object]"')]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// toString方法先于valueOf方法执行")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  valueOf"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  toString"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v('// "3"')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_4、强制转换-boolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、强制转换-boolean","aria-hidden":"true"}},[this._v("#")]),this._v(" 4、强制转换 - Boolean()")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("Boolean()")]),this._v("函数可以将任意类型的值转为布尔值。"),s("strong",[this._v("所有对象（包括空对象）的转换结果都是true")]),this._v("。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 除了以下五个值的转换结果为false，其他的值全部为true。")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Boolean")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("undefined"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Boolean")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Boolean")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Boolean")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("NaN")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Boolean")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("''")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// true和false这两个布尔值不会发生变化。")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Boolean")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Boolean")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 所有对象（包括空对象）的转换结果都是true，")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 甚至连false对应的布尔对象new Boolean(false)也是true")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Boolean")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Boolean")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("Boolean")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Boolean")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_5、自动转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、自动转换","aria-hidden":"true"}},[this._v("#")]),this._v(" 5、自动转换")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("自动转换的规则是这样的："),s("strong",[this._v("预期什么类型的值，就调用该类型的转换函数")]),this._v("。比如，某个位置预期为字符串，就调用"),s("code",[this._v("String()")]),this._v("函数进行转换。"),s("strong",[this._v("如果该位置既可以是字符串，也可能是数值，那么默认转为数值。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("遇到以下三种情况时，"),s("code",[this._v("JavaScript")]),this._v(" 会自动转换数据类型，即转换是自动完成的，用户不可见。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("第一种情况，不同类型的数据互相运算。")]),s("li",[this._v("第二种情况，对非布尔值类型的数据求布尔值。")]),s("li",[this._v("第三种情况，对非数值类型的值使用一元运算符（即"),s("code",[this._v("+")]),this._v("和"),s("code",[this._v("-")]),this._v("）。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 不同类型的数据互相运算")]),t._v("\n"),n("span",{attrs:{class:"token number"}},[t._v("123")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'abc'")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "123abc"')]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 对非布尔值类型的数据求布尔值")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'abc'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'hello'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),n("span",{attrs:{class:"token comment"}},[t._v('// "hello"')]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 对非数值类型的值使用一元运算符")]),t._v("\n"),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("foo"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'bar'")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("由于自动转换具有不确定性，而且不易除错，"),n("strong",[t._v("建议在预期为布尔值、数值、字符串的地方，全部使用"),n("code",[t._v("Boolean()")]),t._v("、"),n("code",[t._v("Number()")]),t._v("和"),n("code",[t._v("String()")]),t._v("函数进行显式转换")]),t._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_6、自动转换为布尔值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、自动转换为布尔值","aria-hidden":"true"}},[this._v("#")]),this._v(" 6、自动转换为布尔值")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("JavaScript")]),this._v(" 遇到预期为布尔值的地方（比如"),s("code",[this._v("if")]),this._v("语句的条件部分），就会将非布尔值的参数自动转换为布尔值。系统内部会自动调用"),s("code",[this._v("Boolean()")]),this._v("函数。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 条件部分的每个值都相当于false，使用否定运算符后，就变成了true。")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("undefined\n  "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("!")]),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("!")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("!")]),n("span",{attrs:{class:"token number"}},[t._v("NaN")]),t._v("\n  "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("!")]),n("span",{attrs:{class:"token string"}},[t._v("''")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("log")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'true'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 将一个表达式转为布尔值。它们内部调用的也是Boolean()函数。")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 写法一")]),t._v("\nexpression "),n("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 写法二")]),t._v("\n"),n("span",{attrs:{class:"token operator"}},[t._v("!")]),n("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" expression\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_7、自动转换为字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、自动转换为字符串","aria-hidden":"true"}},[this._v("#")]),this._v(" 7、自动转换为字符串")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("JavaScript")]),this._v(" 遇到预期为字符串的地方，就会将非字符串的值自动转为字符串。具体规则是，先将复合类型的值转为原始类型的值，再将原始类型的值转为字符串。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 字符串的自动转换，主要发生在字符串的加法运算时")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 当一个值为字符串，另一个值为非字符串，则后者转为字符串。")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// '51'")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "5true"')]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "5false"')]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "5[object Object]"')]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "5"')]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "5function (){}"')]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" undefined "),n("span",{attrs:{class:"token comment"}},[t._v('// "5undefined"')]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "5null"')]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 这种自动转换很容易出错。")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 开发者可能期望返回120，但是由于自动转换，实际上返回了一个字符10020。")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  width"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'100'")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("20")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v('// "10020"')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_8、自动转换为数值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、自动转换为数值","aria-hidden":"true"}},[this._v("#")]),this._v(" 8、自动转换为数值")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("JavaScript")]),this._v(" 遇到预期为数值的地方，就会将参数值自动转换为数值。系统内部会自动调用"),s("code",[this._v("Number()")]),this._v("函数。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 除了加法运算符（+）有可能把运算子转为字符串，其他运算符都会把运算子自动转成数值。")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 运算符两侧的运算子，都被转成了数值。")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n"),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("  "),n("span",{attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("   "),n("span",{attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    "),n("span",{attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),n("span",{attrs:{class:"token string"}},[t._v("'abc'")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("   "),n("span",{attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nundefined "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 一元运算符也会把运算子转成数值。")]),t._v("\n"),n("span",{attrs:{class:"token operator"}},[t._v("+")]),n("span",{attrs:{class:"token string"}},[t._v("'abc'")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),n("span",{attrs:{class:"token operator"}},[t._v("-")]),n("span",{attrs:{class:"token string"}},[t._v("'abc'")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),n("span",{attrs:{class:"token operator"}},[t._v("+")]),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),n("span",{attrs:{class:"token operator"}},[t._v("-")]),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("注意：null转为数值时为0，而undefined转为数值时为NaN。")])])}],!1,null,null,null);s.default=e.exports}}]);