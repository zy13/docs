(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{304:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("p",[a("a",{attrs:{href:"https://www.wangdoc.com/javascript/operators/boolean.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("布尔运算符"),a("OutboundLink")],1)]),t._m(0),t._m(1),t._m(2),t._m(3),t._m(4),t._m(5),t._m(6),t._m(7),t._m(8),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_1、概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、概述","aria-hidden":"true"}},[this._v("#")]),this._v(" 1、概述")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("布尔运算符用于"),s("strong",[this._v("将表达式转为布尔值")]),this._v("，一共包含四个运算符。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("取反运算符："),a("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("\n且运算符："),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n或运算符："),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v("\n三元运算符："),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_2、取反运算符（-）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、取反运算符（-）","aria-hidden":"true"}},[this._v("#")]),this._v(" 2、取反运算符（!）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("取反运算符是一个感叹号，用于将布尔值变为相反值。")]),s("li",[this._v("对于非布尔值，取反运算符会将其转为布尔值。")]),s("li",[this._v("不管什么类型的值，经过取反运算后，都变成了布尔值。")]),s("li",[this._v("如果对一个值连续做两次取反运算，等于将其转为对应的布尔值，与"),s("code",[this._v("Boolean")]),this._v("函数的作用相同")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// true变成false，false变成true")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 非布尔值，以下六个值取反后为true，其他值都为false")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("undefined "),a("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token string"}},[t._v('""')]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token number"}},[t._v("54")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 不管x是什么类型的值，经过两次取反运算后，变成了与Boolean函数结果相同的布尔值")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 两次取反就是将一个值转为布尔值的简便写法")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("x\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_3、且运算符（-）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、且运算符（-）","aria-hidden":"true"}},[this._v("#")]),this._v(" 3、且运算符（&&）")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("且运算符（"),a("code",[t._v("&&")]),t._v("）往往用于多个表达式的"),a("strong",[t._v("求值")]),t._v("。")]),a("li",[t._v("如果第一个运算子的布尔值为"),a("code",[t._v("true")]),t._v("，则返回第二个运算子的值（注意是值，不是布尔值）。")]),a("li",[t._v("如果第一个运算子的布尔值为"),a("code",[t._v("false")]),t._v("，则直接返回第一个运算子的值，且不再对第二个运算子求值。")]),a("li",[t._v("跳过第二个运算子的机制，被称为“"),a("strong",[t._v("短路")]),t._v("”。")]),a("li",[t._v("且运算符可以多个连用，这时返回第一个布尔值为"),a("code",[t._v("false")]),t._v("的表达式的值。")]),a("li",[t._v("如果所有表达式的布尔值都为"),a("code",[t._v("true")]),t._v("，则返回最后一个表达式的值。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 多个表达式的求值")]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'t'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'t'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'f'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "f"')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'t'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'f'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 且运算符的第一个运算子的布尔值为false，则直接返回它的值0")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 而不再对第二个运算子求值，所以变量x的值没变。")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" x "),a("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nx "),a("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 一段if结构的代码，就可以用且运算符改写")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("doSomething")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 等价于")]),t._v("\ni "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("doSomething")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 不易除错，建议谨慎使用。")]),t._v("\n\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 第一个布尔值为false的表达式为第三个表达式，所以得到一个空字符串")]),t._v("\n"),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'foo'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'foo'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// ''")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 所有表达式的布尔值都是true，所以返回最后一个表达式的值3")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_4、或运算符（-）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、或运算符（-）","aria-hidden":"true"}},[this._v("#")]),this._v(" 4、或运算符（||）")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("或运算符（"),a("code",[t._v("||")]),t._v("）也用于多个表达式的"),a("strong",[t._v("求值")]),t._v("，或运算符常用于"),a("strong",[t._v("为一个变量设置默认值")]),t._v("。")]),a("li",[t._v("如果第一个运算子的布尔值为"),a("code",[t._v("true")]),t._v("，则返回第一个运算子的值，且不再对第二个运算子求值。")]),a("li",[t._v("如果第一个运算子的布尔值为"),a("code",[t._v("false")]),t._v("，则返回第二个运算子的值。")]),a("li",[t._v("只通过第一个表达式的值，控制是否运行第二个表达式的机制，就称为“"),a("strong",[t._v("短路")]),t._v("”（"),a("code",[t._v("short-cut")]),t._v("）。")]),a("li",[t._v("或运算符可以多个连用，这时返回第一个布尔值为"),a("code",[t._v("true")]),t._v("的表达式的值。")]),a("li",[t._v("如果所有表达式都为"),a("code",[t._v("false")]),t._v("，则返回最后一个表达式的值。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 多个表达式的求值")]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'t'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "t"')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'t'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'f'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "t"')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'f'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "f"')]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 短路：第一个运算子为`true`，直接返回`true`，x的值没有改变")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nx "),a("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 第一个布尔值为true的表达式是第四个表达式，所以得到数值4")]),t._v("\n"),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'foo'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 所有表达式的布尔值都为false，所以返回最后一个表达式的值。")]),t._v("\n"),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// ''")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 如果函数调用时，没有提供参数，则该参数默认设置为空字符串")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("saveText")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  text "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" text "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("''")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 或者写成")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("saveText")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("''")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_5、三元条件运算符（-）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、三元条件运算符（-）","aria-hidden":"true"}},[this._v("#")]),this._v(" 5、三元条件运算符（?:）")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("三元条件运算符由问号（"),a("code",[t._v("?")]),t._v("）和冒号（"),a("code",[t._v(":")]),t._v("）组成，分隔三个表达式，"),a("code",[t._v("JavaScript")]),t._v(" 语言唯一一个需要三个运算子的运算符。")]),a("li",[t._v("如果第一个表达式的布尔值为"),a("code",[t._v("true")]),t._v("，则返回第二个表达式的值，否则返回第三个表达式的值。")]),a("li",[t._v("三元条件"),a("strong",[t._v("表达式")]),t._v("与"),a("code",[t._v("if...else")]),a("strong",[t._v("语句")]),t._v("（无返回值）具有同样表达效果，前者可以表达的，后者也能表达。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// t和0的布尔值分别为true和false，所以分别返回第二个和第三个表达式的值。")]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'t'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'world'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "hello"')]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'world'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "world"')]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 需要返回值的场合，只能使用三元条件表达式，不能使用if..else")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// console.log方法的参数必须是一个表达式，这时就只能使用三元条件表达式")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'T'")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'F'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])}],!1,null,null,null);s.default=e.exports}}]);